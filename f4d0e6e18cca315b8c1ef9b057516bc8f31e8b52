{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9223ea53_00f8efda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-23T12:00:32Z",
      "side": 1,
      "message": "E2E has been tested and I would like to test it with @ponch78@gmail.com.\nIt would be amazing to provide an IT test but pull-replication does not provide a mechanism to write IT tests that run 2 Gerrit instances, one primary and one replica.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2f6de92_10011edb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I have concerns on the body detection logic and caching.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18942de7_7a6bfc89",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-10-24T10:04:58Z",
      "side": 1,
      "message": "nit: how about extracting this into a private helper method eg. `getPojectName(HttpServletRequest)`",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 93,
        "endChar": 63
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d603072f_719a8c69",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "this logic should move in `processRequestWithConfiguration`, as it\u0027s the only place where it is used. Plus it reduces the number of args in the method signature.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "146620df_0254dc39",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18942de7_7a6bfc89",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 93,
        "endChar": 63
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e6163fe_e29cf3be",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d603072f_719a8c69",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d8bc60d_25a14840",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "Hmmm, I dont think this catches all cases. `getContentLength()` can also return -1, if the length is not known. So I think the logic should be\n```\nhttpServletRequest.getContentLength() \u003e 0 ? processRequestWithConfiguration : processRequest\n```",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9d75c3f_c7aa4403",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "You are correct. I will change it.",
      "parentUuid": "5d8bc60d_25a14840",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d99f5a2_e37c9b48",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-10-24T10:04:58Z",
      "side": 1,
      "message": "nit: I\u0027d extract that logic into a `private` `hasInitProject` method and use `if` statement instead of the ternary operator. IMO this way it would be cleaner and more readable even with all of the comments you added.",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 108,
        "endChar": 0
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83242472_b0a1d1a3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "I have removed the ternary operator, as you suggested, but for the moment, I don\u0027t see the necessity of introducing another method to check if there is a payload.",
      "parentUuid": "4d99f5a2_e37c9b48",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 108,
        "endChar": 0
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cfa1364_e96883da",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 122,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "it is a bit confusing that you are blanket-catching exceptions, but not handle them all. For example, `IOException` is simply re-thrown. I think it makes more sense to get rid of the `handleException` method and have multiple catch statements here.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c749a58_aec9ae9b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 122,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Your proposal is how it was before, but the code was difficult to read at that point. It looks like this refactoring is not making things more descriptive. I will catch all the checked exceptions here and we take it from there.",
      "parentUuid": "1cfa1364_e96883da",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd8d0d88_9d7df6e7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 134,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "```suggestion\n      repLog.info(\"Init project API for {}\", gitRepositoryName);\n```",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54cf7336_e1783286",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 134,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd8d0d88_9d7df6e7",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b5e1730_36cf6925",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-23T10:59:53Z",
      "side": 1,
      "message": "These operations are not atomic, so the logic could init a project and fail in the apply object operation or the project caching step. @luca.milanesio@gmail.com, do we want to permit this type of inconsistency?",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a45e966_5dbbafbf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-25T00:41:49Z",
      "side": 1,
      "message": "The project was just initialised and is empty, why would the addition of the extra object would fail? What would be the condition you evisage?",
      "parentUuid": "5b5e1730_36cf6925",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f315b892_fd314e87",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-25T10:46:04Z",
      "side": 1,
      "message": "As I said below, there are four checked exceptions that indicate that logic might fail.",
      "parentUuid": "9a45e966_5dbbafbf",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dba58b13_b2ad236b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T22:14:54Z",
      "side": 1,
      "message": "Sure, but there are unlisted unchecked exceptions that may result in any other line of code to fail anyway. If you see a use-case where it may fail, let\u0027s discuss, otherwise we can simply accept the condition.",
      "parentUuid": "f315b892_fd314e87",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d07292_c0f8cc7b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 144,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I think this is related to what you asked Alvaro in L140. If L144 succeeds, but subsequent operations fail, we are left in a state where the git directory is created, but its not indexed. Can this cause problems on future operations or change the user experience?",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0fc7595_dc848276",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 144,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-25T00:41:49Z",
      "side": 1,
      "message": "How can that happen? The repository is new, there is no concurrency, there is no existing data: how can the insertion of the objects fail?",
      "parentUuid": "84d07292_c0f8cc7b",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e38a7e7_4d30d4a0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 144,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-25T08:59:55Z",
      "side": 1,
      "message": "After the repository is created, we are delegating to `applyObjects`. This method call can throw 3 different types of exceptions: IOException, RefUpdateException \u0026 MissingParentObjectException. I am not entirely sure how the last one can occur and perhaps it can\u0027t happen on an empty repo, however a RefUpdateException and the broader IOException can theoretically happen.",
      "parentUuid": "a0fc7595_dc848276",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "666caa8c_3583fcf8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 144,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-25T10:46:04Z",
      "side": 1,
      "message": "Definitively, there are four checked exceptions and actually, they are caught in the main flow. So conceptually there is a reason to think that we could end up with an inconsistent situation.",
      "parentUuid": "1e38a7e7_4d30d4a0",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "478ba267_38fd8756",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 144,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T22:14:54Z",
      "side": 1,
      "message": "Sure, but let\u0027s see things in real practical terms:\n- IOException: sure, the disk may fail or be full. The I/O on disk isn\u0027t transactional anyway, so we will be in the same situation even if we do something.\n- RefUpdateException: this may happen if the update was rejected because of locking, ref existing already. This is a brand-new repo, so this won\u0027t happen.\n- MissingParentObjectException: this is a new repo, there are no parent objects and we know we are missing it, and that\u0027s expected.\n\nResolving this for now, unless you have a *real production case* situation to cover, in that case list the real production case and we can re-discuss.",
      "parentUuid": "666caa8c_3583fcf8",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a72db6bb_8d47920c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "Do we need to populate the cache? Shouldn\u0027t we be doing a reindexing as we do in L182? Will reindexing \"replace\" the need to cache? If we do need to cache, shouldn\u0027t we use `evictAndReindex` as we do on master?",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4327010_a501549d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "@luca.milanesio@gmail.com, please, can you provide some clarification?",
      "parentUuid": "a72db6bb_8d47920c",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d6c82c8_be59ae51",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-25T00:41:49Z",
      "side": 1,
      "message": "Nope, the `onCreateProject` is doing whatever is needed. We should *NOT* copy\u0026paste the logic of Gerrit but leave to the event handlers to do their job.",
      "parentUuid": "c4327010_a501549d",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a390321_2f9d406a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-25T08:39:31Z",
      "side": 1,
      "message": "@luca.milanesio@gmail.com can you please elaborate?\nOn master we have introduced the project cache, as Alvaro is doing here, but we are calling `evictAndReindex` [1] rather than `onCreateProject`. The rationale is explained in the change. Is what we are doing on master wrong? Shouldn\u0027t we be doing the same here?\n\n[1] https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/382077",
      "parentUuid": "1d6c82c8_be59ae51",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "896c8882_3f654288",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-26T10:48:02Z",
      "side": 1,
      "message": "This change is targeting stable-3.6 but as I mentioned here[1] from stable-3.9 we have to do `evictAndReindex` if not because on negative caching project list will not be updated:\nhttps://gerrit-review.googlesource.com/c/plugins/pull-replication/+/383734/comment/35eaa25e_93151f4b/",
      "parentUuid": "5a390321_2f9d406a",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f534831_3944f2f4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-26T10:59:18Z",
      "side": 1,
      "message": "After second thought, maybe actual problem is in `projectCache.onCreateProject(Project.nameKey(projectName));`\nwhich is not removing project from non-existing projects cache.\nI will have a look in Gerrit Core and update",
      "parentUuid": "896c8882_3f654288",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d0b268c_49265d99",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-26T12:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f534831_3944f2f4",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0997d905_072fee3e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-26T13:00:13Z",
      "side": 1,
      "message": "@maczech@gmail.com I am not clear what we should do. Should we change master to use `onCreateProject`, or should we use here the `evictAndReindex`? It would be also good to explain why one would be preferred over the other.",
      "parentUuid": "8d0b268c_49265d99",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "077222d5_6c56878c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-26T13:08:05Z",
      "side": 1,
      "message": "+1 \nI would like to understand what type of operations in terms of indexing and caching need to be executed when a `project init` operation is executed in the replica.",
      "parentUuid": "0997d905_072fee3e",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7ff9d4d_378ef94d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-26T13:25:13Z",
      "side": 1,
      "message": "In stable-3.9 negative cache was introduced in Gerrit Core[1]. But `onProjectCreate` wasn\u0027t updated to reflect the new functionality. That\u0027s why I did a quick fix to do `evictAndReindex`[2] but now if I think about it I believe we should fix the Gerrit Core. I\u0027ve put the comment on the original change to understand why they did it in that way[3]. If they agree that we have an issue I will prepare change for Gerrit 3.9.\n\nTo summarise up to gerrit 3.9 we should stick to `onCreateProject` on 3.9 if they would not agree to fix it in gerrit core we have to do `evictAndReindex`. But this can be done as a separate change\n\n1. https://gerrit-review.googlesource.com/c/gerrit/+/376576\n2. https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/382077\n3. https://gerrit-review.googlesource.com/c/gerrit/+/376576/comment/f597e6ef_24ec9ae0/",
      "parentUuid": "077222d5_6c56878c",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90eae609_0dd7f67a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T22:14:54Z",
      "side": 1,
      "message": "I agree with Marcin\u0027s analysis: we need to run `onProjectCreate` and leave to Gerrit to decide what to do.\n\nIf Gerrit decide to do the wrong thing, we need to fix Gerrit core. On stable-3.6 this is the correct method to call.",
      "parentUuid": "a7ff9d4d_378ef94d",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76d25c73_0c427afa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I feel L190-196 belong to the `RevisionsInput.validate()` method. It is weird that you are validating the input and in the end you \"revalidate\" it (by calling `input.validate()`). Besides, this will be useful in any other code that needs to validate the input.\n\nThe only meaningful check i can think of that can be applied here is to check that the ref is actually the meta config ref.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e34414e_aa4ffc7e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Let me have a look at it.",
      "parentUuid": "76d25c73_0c427afa",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "272f1e40_ca9f9dc5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T11:01:52Z",
      "side": 1,
      "message": "Interestingly, we have the same approach in `ApplyObjectAction.java` [1], [2]. \n\n[1] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/stable-3.6/src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectAction.java#60\n\n[2] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/stable-3.6/src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectAction.java#62",
      "parentUuid": "9e34414e_aa4ffc7e",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d70b8188_9e0fb904",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T14:19:57Z",
      "side": 1,
      "message": "Looking at the code:\n```\n    if (Strings.isNullOrEmpty(input.getLabel())) {\n      throw new IllegalArgumentException(\"Source label cannot be null or empty\");\n    }\n\n    if (Strings.isNullOrEmpty(input.getRefName())) {\n      throw new IllegalArgumentException(\"Ref-update refname cannot be null or empty\");\n    }\n```\nThose properties must be validated; otherwise, a runtime exception will be thrown behind L159.\n\nThe question is: can we refactor the RevisionsInput.validate() method to include these checks? Probably yes, but we should also do deeper refactoring in ApplicationObjectAction.java, as I noted in the comment above. I think that refactoring should not be done as a part of this change.\n\nI like checking if the ref is a ref meta config.\n\nI am open to hearing what @luca.milanesio@gmail.com and @maczech@gmail.com have to say about this.",
      "parentUuid": "272f1e40_ca9f9dc5",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87c81a3f_18574270",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-25T00:41:49Z",
      "side": 1,
      "message": "Done, like you did is enough. *Let\u0027s NOT* assume that this change has to fix all the code of the replication plugin. I like the fact that RevisionInput is untouched and I\u0027d like to tackle one problem at a time: one change \u003d one thing.",
      "parentUuid": "d70b8188_9e0fb904",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e18ee743_c1533dd4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 202,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "```suggestion\n    repLog.error(\"Init Project API FAILED for {}\", projectName);\n```",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71b952c1_af164bcb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 202,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e18ee743_c1533dd4",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3be2883_4d6bdb32",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 210,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I don\u0027t think we should provide a pre-defined error message here, as there could be multiple reasons why the failure occurred. I think its better to just use the exception message which will (hopefully) provide richer information.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc58fa85_78a66f7d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 210,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "I think this method is adding confusion. As I mentioned, I will move all the catches.",
      "parentUuid": "a3be2883_4d6bdb32",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}