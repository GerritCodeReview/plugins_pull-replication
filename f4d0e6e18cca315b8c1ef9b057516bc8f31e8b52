{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9223ea53_00f8efda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-23T12:00:32Z",
      "side": 1,
      "message": "E2E has been tested and I would like to test it with @ponch78@gmail.com.\nIt would be amazing to provide an IT test but pull-replication does not provide a mechanism to write IT tests that run 2 Gerrit instances, one primary and one replica.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2f6de92_10011edb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I have concerns on the body detection logic and caching.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18942de7_7a6bfc89",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-10-24T10:04:58Z",
      "side": 1,
      "message": "nit: how about extracting this into a private helper method eg. `getPojectName(HttpServletRequest)`",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 93,
        "endChar": 63
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d603072f_719a8c69",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "this logic should move in `processRequestWithConfiguration`, as it\u0027s the only place where it is used. Plus it reduces the number of args in the method signature.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "146620df_0254dc39",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18942de7_7a6bfc89",
      "range": {
        "startLine": 91,
        "startChar": 3,
        "endLine": 93,
        "endChar": 63
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e6163fe_e29cf3be",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d603072f_719a8c69",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d8bc60d_25a14840",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "Hmmm, I dont think this catches all cases. `getContentLength()` can also return -1, if the length is not known. So I think the logic should be\n```\nhttpServletRequest.getContentLength() \u003e 0 ? processRequestWithConfiguration : processRequest\n```",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9d75c3f_c7aa4403",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "You are correct. I will change it.",
      "parentUuid": "5d8bc60d_25a14840",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d99f5a2_e37c9b48",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-10-24T10:04:58Z",
      "side": 1,
      "message": "nit: I\u0027d extract that logic into a `private` `hasInitProject` method and use `if` statement instead of the ternary operator. IMO this way it would be cleaner and more readable even with all of the comments you added.",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 108,
        "endChar": 0
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83242472_b0a1d1a3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "I have removed the ternary operator, as you suggested, but for the moment, I don\u0027t see the necessity of introducing another method to check if there is a payload.",
      "parentUuid": "4d99f5a2_e37c9b48",
      "range": {
        "startLine": 95,
        "startChar": 5,
        "endLine": 108,
        "endChar": 0
      },
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cfa1364_e96883da",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 122,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "it is a bit confusing that you are blanket-catching exceptions, but not handle them all. For example, `IOException` is simply re-thrown. I think it makes more sense to get rid of the `handleException` method and have multiple catch statements here.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c749a58_aec9ae9b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 122,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Your proposal is how it was before, but the code was difficult to read at that point. It looks like this refactoring is not making things more descriptive. I will catch all the checked exceptions here and we take it from there.",
      "parentUuid": "1cfa1364_e96883da",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd8d0d88_9d7df6e7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 134,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "```suggestion\n      repLog.info(\"Init project API for {}\", gitRepositoryName);\n```",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54cf7336_e1783286",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 134,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd8d0d88_9d7df6e7",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b5e1730_36cf6925",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 140,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-23T10:59:53Z",
      "side": 1,
      "message": "These operations are not atomic, so the logic could init a project and fail in the apply object operation or the project caching step. @luca.milanesio@gmail.com, do we want to permit this type of inconsistency?",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d07292_c0f8cc7b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 144,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I think this is related to what you asked Alvaro in L140. If L144 succeeds, but subsequent operations fail, we are left in a state where the git directory is created, but its not indexed. Can this cause problems on future operations or change the user experience?",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a72db6bb_8d47920c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "Do we need to populate the cache? Shouldn\u0027t we be doing a reindexing as we do in L182? Will reindexing \"replace\" the need to cache? If we do need to cache, shouldn\u0027t we use `evictAndReindex` as we do on master?",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4327010_a501549d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 156,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "@luca.milanesio@gmail.com, please, can you provide some clarification?",
      "parentUuid": "a72db6bb_8d47920c",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76d25c73_0c427afa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I feel L190-196 belong to the `RevisionsInput.validate()` method. It is weird that you are validating the input and in the end you \"revalidate\" it (by calling `input.validate()`). Besides, this will be useful in any other code that needs to validate the input.\n\nThe only meaningful check i can think of that can be applied here is to check that the ref is actually the meta config ref.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e34414e_aa4ffc7e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Let me have a look at it.",
      "parentUuid": "76d25c73_0c427afa",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "272f1e40_ca9f9dc5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T11:01:52Z",
      "side": 1,
      "message": "Interestingly, we have the same approach in `ApplyObjectAction.java` [1], [2]. \n\n[1] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/stable-3.6/src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectAction.java#60\n\n[2] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/stable-3.6/src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectAction.java#62",
      "parentUuid": "9e34414e_aa4ffc7e",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d70b8188_9e0fb904",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 196,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T14:19:57Z",
      "side": 1,
      "message": "Looking at the code:\n```\n    if (Strings.isNullOrEmpty(input.getLabel())) {\n      throw new IllegalArgumentException(\"Source label cannot be null or empty\");\n    }\n\n    if (Strings.isNullOrEmpty(input.getRefName())) {\n      throw new IllegalArgumentException(\"Ref-update refname cannot be null or empty\");\n    }\n```\nThose properties must be validated; otherwise, a runtime exception will be thrown behind L159.\n\nThe question is: can we refactor the RevisionsInput.validate() method to include these checks? Probably yes, but we should also do deeper refactoring in ApplicationObjectAction.java, as I noted in the comment above. I think that refactoring should not be done as a part of this change.\n\nI like checking if the ref is a ref meta config.\n\nI am open to hearing what @luca.milanesio@gmail.com and @maczech@gmail.com have to say about this.",
      "parentUuid": "272f1e40_ca9f9dc5",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e18ee743_c1533dd4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 202,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "```suggestion\n    repLog.error(\"Init Project API FAILED for {}\", projectName);\n```",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71b952c1_af164bcb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 202,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e18ee743_c1533dd4",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3be2883_4d6bdb32",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 210,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-24T10:17:39Z",
      "side": 1,
      "message": "I don\u0027t think we should provide a pre-defined error message here, as there could be multiple reasons why the failure occurred. I think its better to just use the exception message which will (hopefully) provide richer information.",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc58fa85_78a66f7d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 12
      },
      "lineNbr": 210,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-24T10:57:35Z",
      "side": 1,
      "message": "I think this method is adding confusion. As I mentioned, I will move all the catches.",
      "parentUuid": "a3be2883_4d6bdb32",
      "revId": "f4d0e6e18cca315b8c1ef9b057516bc8f31e8b52",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}