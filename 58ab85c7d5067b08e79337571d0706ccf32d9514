{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b4939f9c_a23a5cb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "I would avoid adding white-box tests, we have already too many of them in this project and they already a bit pain to maintain.",
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2bb4dce_c4d97656",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "What are white-box tests? Are you referring to the IT I added? It adds value IMO as it ensures that the healthcheck is registered and working properly.",
      "parentUuid": "b4939f9c_a23a5cb3",
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "777555e8_aa6faa88",
        "filename": "BUILD",
        "patchSetId": 10
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "This would include the whole plugin code into the pull-replication.jar, which is not what we want.\n\nDefine a custom target with the `neverlink` option. See for example the aws-dynamodb build at [1].\n\n[1] https://gerrit.googlesource.com/plugins/aws-dynamodb-refdb/+/refs/heads/master/BUILD#66",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 31
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21b65297_338db399",
        "filename": "BUILD",
        "patchSetId": 10
      },
      "lineNbr": 54,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "777555e8_aa6faa88",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 31
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f7ec49e_24c045fc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 10
      },
      "lineNbr": 948,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "```suggestion\n\n  public long zeroPendingTasksForRepo(Project.NameKey project) {\n    return !pending.values().stream()\n        .anyMatch(fetch -\u003e fetch.getProjectNameKey().equals(project));\n  }\n```",
      "range": {
        "startLine": 942,
        "startChar": 0,
        "endLine": 948,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3632560_85622d30",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 10
      },
      "lineNbr": 948,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f7ec49e_24c045fc",
      "range": {
        "startLine": 942,
        "startChar": 0,
        "endLine": 948,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b9526d9_b51dcb4a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 10
      },
      "lineNbr": 955,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "```suggestion\n  public long zeroInflightTasksForRepo(Project.NameKey project) {\n    return inFlight.values().stream()\n        .anyMatch(fetch -\u003e fetch.getProjectNameKey.equals(project));\n  }\n```",
      "range": {
        "startLine": 950,
        "startChar": 0,
        "endLine": 955,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60aa6a0c_7432aa0e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 10
      },
      "lineNbr": 955,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b9526d9_b51dcb4a",
      "range": {
        "startLine": 950,
        "startChar": 0,
        "endLine": 955,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eda9c6a5_ed49bd63",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 85,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-01-25T12:23:21Z",
      "side": 1,
      "message": "this could be parallelized, but i am not convinced it will necessarily be faster due to the overhead of the thread management. The check is pretty fast anyway. I think it makes sense to leave it as is for now, rather than optimising prematurely. But something to keep in mind for the future.",
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "152774ac_23e3633f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "```suggestion\n                    return source.zeroPendingTasks() \u0026\u0026 source.zeroInflightTasks();\n```",
      "range": {
        "startLine": 88,
        "startChar": 27,
        "endLine": 88,
        "endChar": 89
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31ef4d04_b39180fc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "this is reusing an existing method, and it doesn\u0027t do any additional counting.",
      "parentUuid": "152774ac_23e3633f",
      "range": {
        "startLine": 88,
        "startChar": 27,
        "endLine": 88,
        "endChar": 89
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f668e392_00dcfe10",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 88,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "31ef4d04_b39180fc",
      "range": {
        "startLine": 88,
        "startChar": 27,
        "endLine": 88,
        "endChar": 89
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1d90e6b_70121fe0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "We do not really need counting here, but just checking if we have at least one pending task. Performing the full exact counting and checking for zero is overkill IMHO and increases the CPU usage.\n\nHealthchecks are executed continuously and minimising CPU utilisation is paramount.\n\n\n```suggestion\n                                source.zeroPendingTasksForRepo(Project.nameKey(project))\n```",
      "range": {
        "startLine": 93,
        "startChar": 32,
        "endLine": 93,
        "endChar": 94
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30b75023_83b9fded",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "Although this is a check that once it passes it is no longer executed, I agree that counting is suboptimal here, so I\u0027ve changed it according to your suggestion",
      "parentUuid": "c1d90e6b_70121fe0",
      "range": {
        "startLine": 93,
        "startChar": 32,
        "endLine": 93,
        "endChar": 94
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f459b77b_917141be",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Sure, but when it isn\u0027t passing, it gets called continuously. Checks are like diagnostics, should be light for not influencing the measurement 😊",
      "parentUuid": "30b75023_83b9fded",
      "range": {
        "startLine": 93,
        "startChar": 32,
        "endLine": 93,
        "endChar": 94
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "032922a7_2d9df70d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 95,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "```suggestion\n                                    \u0026\u0026 source.zeroInflightTasksForRepo(Project.nameKey(project)));\n```",
      "range": {
        "startLine": 94,
        "startChar": 39,
        "endLine": 95,
        "endChar": 44
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca8d063e_bed6e131",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheck.java",
        "patchSetId": 10
      },
      "lineNbr": 95,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "032922a7_2d9df70d",
      "range": {
        "startLine": 94,
        "startChar": 39,
        "endLine": 95,
        "endChar": 44
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b8d116d_a63a0350",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 129,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Avoid magic values in tests.",
      "range": {
        "startLine": 129,
        "startChar": 8,
        "endLine": 129,
        "endChar": 15
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08261ea6_d6c18482",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 129,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "this is addressed in a later commit.",
      "parentUuid": "1b8d116d_a63a0350",
      "range": {
        "startLine": 129,
        "startChar": 8,
        "endLine": 129,
        "endChar": 15
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "616ef727_37775128",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 129,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "This change isn\u0027t merged, why not addressing it here instead?",
      "parentUuid": "08261ea6_d6c18482",
      "range": {
        "startLine": 129,
        "startChar": 8,
        "endLine": 129,
        "endChar": 15
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa20d9b1_c7cad3b9",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 129,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "616ef727_37775128",
      "range": {
        "startLine": 129,
        "startChar": 8,
        "endLine": 129,
        "endChar": 15
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3861d9ec_799d2cd8",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 150,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Avoid magic values in tests",
      "range": {
        "startLine": 150,
        "startChar": 51,
        "endLine": 150,
        "endChar": 54
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e066a969_36c18c5f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 150,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "this is copied from another IT test, in fact all our tests have the same setup.",
      "parentUuid": "3861d9ec_799d2cd8",
      "range": {
        "startLine": 150,
        "startChar": 51,
        "endLine": 150,
        "endChar": 54
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9af934ed_ba34ee2d",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 167,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Do you really need to create a change? Why not just creating a commit?\nThe fact that you are replicating changes is misleading, because it isn\u0027t relevant to the test\u0027s objective.",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 167,
        "endChar": 58
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2fbc190_13781d71",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 167,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "all our ITs are using the same setup, and we should be consistent. This is copied from a random IT.",
      "parentUuid": "9af934ed_ba34ee2d",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 167,
        "endChar": 58
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0faf3d61_6c781ae7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 167,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Yes, I know, and that was wrong. I tried already to sanitise many of them, but possibly I left some of them behind.\n\nDo we really need to spread the bad habits further?\nI know that tests in this plugin aren\u0027t a good example, but we should not be falling into the [broken windows](https://blog.codinghorror.com/the-broken-window-theory/) syndrome.",
      "parentUuid": "c2fbc190_13781d71",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 167,
        "endChar": 58
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09a3c7f2_8f9af52c",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 167,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "Ok, can you please point me to one of the sanitised tests which only uses a commit rather than a change, so I can take a look, and reuse as much as possible.",
      "parentUuid": "0faf3d61_6c781ae7",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 167,
        "endChar": 58
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b9f1ea0_881ebf1e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 167,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-06T12:17:45Z",
      "side": 1,
      "message": "See the next PS to show you an example of how to create a commit into a repository.",
      "parentUuid": "09a3c7f2_8f9af52c",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 167,
        "endChar": 58
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec01072c_8435cfb0",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 167,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-07T08:52:29Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7b9f1ea0_881ebf1e",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 167,
        "endChar": 58
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa72df2e_be93215e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "would be safer `\u003e 0` ?",
      "range": {
        "startLine": 187,
        "startChar": 37,
        "endLine": 187,
        "endChar": 49
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9fdcb3a_57bcc51e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "why? We have one replication task, so we should be specific. If we end up with a counter \u003e 1 it means we have a bigger problem somewhere in our test setup, and its good to catch such problem rather than it going undetected.",
      "parentUuid": "fa72df2e_be93215e",
      "range": {
        "startLine": 187,
        "startChar": 37,
        "endLine": 187,
        "endChar": 49
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cad60136_37297556",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Well, if you have counter \u003e 1 then this test will just get stuck and time out. The _bigger problem_ won\u0027t be detected anyway.\n\nIf counter is \u003e 1 we should fail fast, and not get the tests stuck.",
      "parentUuid": "c9fdcb3a_57bcc51e",
      "range": {
        "startLine": 187,
        "startChar": 37,
        "endLine": 187,
        "endChar": 49
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0031aee6_b16dc9f3",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 187,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "How will you fail fast if counter \u003e 1? The test would still pass. \nWhereas if the test times out, it is an indicator, a _hint_ that something is wrong. Anyway, I have changed it.",
      "parentUuid": "cad60136_37297556",
      "range": {
        "startLine": 187,
        "startChar": 37,
        "endLine": 187,
        "endChar": 49
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dda2eeb_e9f8ec48",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 198,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "I find quite strange that we throw an assertion failed for catching it and incrementing a counter.\n\nWhy not simply incrementing the counters when `healthcheck.run().result !\u003d HealthCheck.Result.FAILED` ?",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 198,
        "endChar": 13
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f8d81e9_df478bc4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 198,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "The problem goes away when the periodOfTime is introduced in a later commit, so this code is just a temporary snapshot. However I agree that you suggestion makes sense so I\u0027ve changed it.",
      "parentUuid": "2dda2eeb_e9f8ec48",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 198,
        "endChar": 13
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b5e4106_a63fe1dd",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Why exactly once? I would say *at least* onece.",
      "range": {
        "startLine": 205,
        "startChar": 9,
        "endLine": 205,
        "endChar": 21
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a53ec0e_f4d5eff8",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "Re-read the test and more importantly the comment I left on L191. This is a race condition, so it may or may not happen, and if it does, it will only be once.",
      "parentUuid": "3b5e4106_a63fe1dd",
      "range": {
        "startLine": 205,
        "startChar": 9,
        "endLine": 205,
        "endChar": 21
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fe4aca1_eb045c24",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationHealthCheckIT.java",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "0a53ec0e_f4d5eff8",
      "range": {
        "startLine": 205,
        "startChar": 9,
        "endLine": 205,
        "endChar": 21
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eb3c46b_64a6ec6b",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "This test is leaking the internal implementation and therefore will be quite fragile to future refactoring.",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 81,
        "endChar": 96
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0179dc88_f1150263",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "I don\u0027t know a better way to test it, because `Source` is an extremely complex object to work with, and setting up the test would be MANY lines long, and extremely fragile. But feel free to suggest an alternative implementation.",
      "parentUuid": "4eb3c46b_64a6ec6b",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 81,
        "endChar": 96
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bd8d433_5adeec7e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Do we need this white-box testing at all? Isn\u0027t the IT testing enough?",
      "parentUuid": "0179dc88_f1150263",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 81,
        "endChar": 96
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0f3e2a_55dfd2df",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "Depends what you mean with \"enough\". If you mean enough to give you confidence your code is correct, self-documented, meets the spec, and can be modified without regression in the future, then no, IMO the IT is not enough. Also the IT serves a different purpose to the unit test, and it\u0027s meant to be testing things at a different layer.\n\nAnyway, there\u0027s no point in debating this. I have modified the tests in this change so that the check is manually executed, and in [1] so that they use the FakeTicker, so the sleeps are gone, but that doesn\u0027t take away the fact we need to \"leak the internal implementation\" with the use of mockito. So please take another look, and let me know if you\u0027d like the unit tests to stay as they are, or they should be removed.\n\n[1] https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/404837/3..4",
      "parentUuid": "9bd8d433_5adeec7e",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 81,
        "endChar": 96
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64f22172_f40e0f12",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-06T12:17:45Z",
      "side": 1,
      "message": "\u003e Depends what you mean with \"enough\". If you mean enough to give you confidence your code is correct, self-documented, meets the spec, and can be modified without regression in the future, then no, IMO the IT is not enough. Also the IT serves a different purpose to the unit test, and it\u0027s meant to be testing things at a different layer.\n\nTrue, but this unit-test doesn\u0027t achieve the above either, because it relies on the internals of the implementation. So it *will break* with future refactoring.\nI agree that it helped you writing the code, but it should then be removed upon merging.\n\nAlso, the IT test was broken and was passing even with broken code. I would prefer to have a valid IT test and leave the unit-tests in your local environment. The IT test is the one that is verifying the end-user functionality, therefore is way more important than the one that verifies that code has the implementation that we expect.\n\nFeel free to still leave it in if you believe helps understanding the feature.",
      "parentUuid": "aa0f3e2a_55dfd2df",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 81,
        "endChar": 96
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1875c4d_fa5912a7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-07T00:33:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "64f22172_f40e0f12",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 81,
        "endChar": 96
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a30d6605_ebedb964",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Is there any async execution happening? If not, just call the `check.run()` multiple times, the test will still produce the same result and the build will be *a lot faster*.",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55b9f224_62ea2706",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "There is no async execution, however these tests were written with the `periodOfTime` requirement in mind (and if you look into the next commit https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/404837 this is clear), so there is the concept of time and the element of waiting until a condition is _eventually_ met. Also, the way I wrote the tests  IMO makes it easy for the developer to understand it. These are unit tests, so they will be fast anyway. I did run them multiple times on my machine prior to raising the change, and I didnt see any noticeable difference in the run time. However, if we see that the build gets slower, we can adjust the sleep duration.",
      "parentUuid": "a30d6605_ebedb964",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a7e1b11_743f9440",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Unit tests are slow if they add sleeps on them.\n\nIf you are not testing async events and you just want to advance the timer, use the [FakeTicker](https://www.javadoc.io/doc/com.google.guava/guava-testlib/19.0/com/google/common/testing/FakeTicker.html) from Guava, as we do in other parts of Gerrit.",
      "parentUuid": "55b9f224_62ea2706",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57a32d51_82410d0f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a7e1b11_743f9440",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f613bfb1_cabd7532",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 105,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Same as above: do not leak internal implementation details in tests.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 105,
        "endChar": 68
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67271e4c_7e23f891",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 105,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-07T00:33:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f613bfb1_cabd7532",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 105,
        "endChar": 68
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9ad77b7_94b7df2e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 112,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Same as above: do we really need async execution here?",
      "range": {
        "startLine": 112,
        "startChar": 4,
        "endLine": 112,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97ffcf87_dabcef96",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 112,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9ad77b7_94b7df2e",
      "range": {
        "startLine": 112,
        "startChar": 4,
        "endLine": 112,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47638777_35f9ef8e",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Same as above: do not leak internal implementation details in the tests.",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 134,
        "endChar": 75
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93ee9cc7_583ab2f0",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-07T00:33:38Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "47638777_35f9ef8e",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 134,
        "endChar": 75
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0d3eb05_85b0b113",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 141,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Same as above: do we really need async execution here?",
      "range": {
        "startLine": 141,
        "startChar": 4,
        "endLine": 141,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a39f6898_1c7aa382",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 141,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0d3eb05_85b0b113",
      "range": {
        "startLine": 141,
        "startChar": 4,
        "endLine": 141,
        "endChar": 14
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d31121_c8fd6f06",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 175,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-27T13:25:58Z",
      "side": 1,
      "message": "Do we really need this? In Gerrit we already have the `waitUntil` in case of async executions.\n\nSee `com.google.gerrit.acceptance.WaitUtil.waitUntil`.",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 175,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce196fc9_30021e01",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 175,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-01T09:57:53Z",
      "side": 1,
      "message": "In a later commit I refactored this code and moved this method into the `WaitUntil` class. It is slightly different from the `waitUntil` method as `eventually`\u0027s main use is to pass an assertion as a Runnable and wait for this to pass, otherwise fail the test. Also the sleep interval is configurable.",
      "parentUuid": "94d31121_c8fd6f06",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 175,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a25718b_b4a14296",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 175,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-02-03T00:37:14Z",
      "side": 1,
      "message": "Why don\u0027t you improve the `WaitUntil` then?",
      "parentUuid": "ce196fc9_30021e01",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 175,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b85b6fa7_54f158ef",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/health/PullReplicationTasksHealthCheckTest.java",
        "patchSetId": 10
      },
      "lineNbr": 175,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2024-02-05T19:19:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a25718b_b4a14296",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 175,
        "endChar": 3
      },
      "revId": "58ab85c7d5067b08e79337571d0706ccf32d9514",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}