{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f929b66b_b04b187b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-22T21:54:49Z",
      "side": 1,
      "message": "pull-replication relies on the replication plugin for reading and parsing the configuration. How can pull-replication work standalone then?",
      "revId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "083518e4_503920f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-01-22T22:14:33Z",
      "side": 1,
      "message": "It relies on the replication code as a dependency, true.\nIt does not require the replication plugin to be installed though, does it?",
      "parentUuid": "f929b66b_b04b187b",
      "revId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ecf7e07_cc999e4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-22T22:17:58Z",
      "side": 1,
      "message": "\u003e It relies on the replication code as a dependency, true.\n\u003e It does not require the replication plugin to be installed though, does it?\n\nAll dependencies that are plugins or core Gerrit are always included with `neverlink`, therefore the actual plugin\u0027s classes are needed.\n\nIt can be included either as a proper plugin *OR* just the replication.jar in the $GERRIT_SITE/lib directory.",
      "parentUuid": "083518e4_503920f7",
      "revId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b343056_cdf92c7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-01-22T22:23:23Z",
      "side": 1,
      "message": "\u003e \u003e It relies on the replication code as a dependency, true.\n\u003e \u003e It does not require the replication plugin to be installed though, does it?\n\u003e \n\u003e All dependencies that are plugins or core Gerrit are always included with `neverlink`, therefore the actual plugin\u0027s classes are needed.\n\npull-replication does not depend on the push replication as a `neverlink`ed dependency, though [1].\n\nI was under the impression that the pull-replication could have been installed with, *or without* the push replication plugin.\n\n[1] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/master/BUILD#23\n\n\u003e \n\u003e It can be included either as a proper plugin *OR* just the replication.jar in the $GERRIT_SITE/lib directory.",
      "parentUuid": "6ecf7e07_cc999e4d",
      "revId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b0bf7f0_229f121e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-01-22T22:26:39Z",
      "side": 1,
      "message": "\u003e \u003e \u003e It relies on the replication code as a dependency, true.\n\u003e \u003e \u003e It does not require the replication plugin to be installed though, does it?\n\u003e \u003e \n\u003e \u003e All dependencies that are plugins or core Gerrit are always included with `neverlink`, therefore the actual plugin\u0027s classes are needed.\n\u003e \n\u003e pull-replication does not depend on the push replication as a `neverlink`ed dependency, though [1].\n\nOh, we are included the *full* replication and delete-project plugin ðŸ˜®\nThat\u0027s a bug and should be fixed, otherwise we have the whole plugins included in pull-replication jar.\n\n\u003e I was under the impression that the pull-replication could have been installed with, *or without* the push replication plugin.\n\nSure, but it must be there at least as lib dependency.\n\n\u003e [1] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/master/BUILD#23\n\nThat\u0027s a bug to be fixed.",
      "parentUuid": "5b343056_cdf92c7e",
      "revId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50d7de62_fae98f0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2024-01-22T22:47:46Z",
      "side": 1,
      "message": "\u003e \u003e \u003e \u003e It relies on the replication code as a dependency, true.\n\u003e \u003e \u003e \u003e It does not require the replication plugin to be installed though, does it?\n\u003e \u003e \u003e \n\u003e \u003e \u003e All dependencies that are plugins or core Gerrit are always included with `neverlink`, therefore the actual plugin\u0027s classes are needed.\n\u003e \u003e \n\u003e \u003e pull-replication does not depend on the push replication as a `neverlink`ed dependency, though [1].\n\u003e \n\u003e Oh, we are included the *full* replication and delete-project plugin ðŸ˜®\n\u003e That\u0027s a bug and should be fixed, otherwise we have the whole plugins included in pull-replication jar.\n\nI will create a bug for this.\n\n\u003e \n\u003e \u003e I was under the impression that the pull-replication could have been installed with, *or without* the push replication plugin.\n\u003e \n\u003e Sure, but it must be there at least as lib dependency.\n\nI don\u0027t think this was necessary until now (because of the missing `neverlink`, all classes were always available).\n\nThe problem now arises with the introduction of the classes bound by `ApiModule`, (which is very recent).\nBut this is a binding problem, not a class dependency one.\n\nAnyway, agreed that replication (and other plugins should be neverlinked), so this will be the case tomorrow, once we neverlink the `replication` plugin.\n\nThat change should also the update the documentation regarding this, because this was not clear (to me at least :P)\n\nIt works if replication is installed as a library *and* installing the Module.\n\n```\ninstallModule \u003d com.googlesource.gerrit.plugins.replication.ApiModule\n```\n\nBug created here [1]\n\n\n[1] https://issues.gerritcodereview.com/issues/321784350",
      "parentUuid": "2b0bf7f0_229f121e",
      "revId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b2b27e66645bd529fba182a7a18b4409c59fc3a2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}