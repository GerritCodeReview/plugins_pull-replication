{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "93c9136d_40f92555",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListener.java",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-03-14T22:02:16Z",
      "side": 1,
      "message": "`else if`?",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 8
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10eed129_b4f0d01a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListener.java",
        "patchSetId": 13
      },
      "lineNbr": 101,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-14T22:17:55Z",
      "side": 1,
      "message": "Nope, because there is a return at L98.",
      "parentUuid": "93c9136d_40f92555",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 8
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c965bd57_4cf5d5f7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListener.java",
        "patchSetId": 13
      },
      "lineNbr": 103,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-03-14T22:02:16Z",
      "side": 1,
      "message": "should `fetchRefsAsync` be in an `else` block? Just so we avoid some spaghetti code...",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 15
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b87d139f_19b68875",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListener.java",
        "patchSetId": 13
      },
      "lineNbr": 103,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-14T22:17:55Z",
      "side": 1,
      "message": "Code with early returns are easier to read that if/then/else. Spaghetti are good, when eaten properly and with moderation ðŸ˜„",
      "parentUuid": "c965bd57_4cf5d5f7",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 15
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c09b409b_2bcd2dd6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListener.java",
        "patchSetId": 13
      },
      "lineNbr": 146,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-03-14T22:02:16Z",
      "side": 1,
      "message": "again, just my lack of knowledge, but what\u0027s happening here?",
      "range": {
        "startLine": 146,
        "startChar": 11,
        "endLine": 146,
        "endChar": 51
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74f7eb6c_1742e3f4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListener.java",
        "patchSetId": 13
      },
      "lineNbr": 146,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-14T22:17:55Z",
      "side": 1,
      "message": "Removing the `refs/meta/config` is the way Gerrit notify project deletions.",
      "parentUuid": "c09b409b_2bcd2dd6",
      "range": {
        "startLine": 146,
        "startChar": 11,
        "endLine": 146,
        "endChar": 51
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "126adee4_dc3645e4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListenerTest.java",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-03-14T22:02:16Z",
      "side": 1,
      "message": "Isn\u0027t this used only in one place? Should it be defined closer to where it\u0027s used?",
      "range": {
        "startLine": 57,
        "startChar": 30,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4fac4fa_bf56fa96",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListenerTest.java",
        "patchSetId": 13
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-14T22:17:55Z",
      "side": 1,
      "message": "Those are just fixtures of values that aren\u0027t relevant anyway for the execution of the test, They are typically defined at the beginning of the suite because their values do not add anything to the readability of the test.",
      "parentUuid": "126adee4_dc3645e4",
      "range": {
        "startLine": 57,
        "startChar": 30,
        "endLine": 57,
        "endChar": 37
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7061debf_309c23b1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListenerTest.java",
        "patchSetId": 13
      },
      "lineNbr": 135,
      "author": {
        "id": 1155599
      },
      "writtenOn": "2023-03-14T22:02:16Z",
      "side": 1,
      "message": "This is just my lack of knowledge, why is this needed?",
      "range": {
        "startLine": 134,
        "startChar": 1,
        "endLine": 135,
        "endChar": 31
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e410894_a768b8b1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListenerTest.java",
        "patchSetId": 13
      },
      "lineNbr": 135,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-14T22:17:55Z",
      "side": 1,
      "message": "I believe these are now needed for avoiding the code to assume that it is a ref deletion.",
      "parentUuid": "7061debf_309c23b1",
      "range": {
        "startLine": 134,
        "startChar": 1,
        "endLine": 135,
        "endChar": 31
      },
      "revId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Documentation",
        "description": {
          "value": "All files in this change are in the \u0027Documentation\u0027 directory"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-file:\"^~(Documentation/.*)\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-file:\"^~(Documentation/.*)\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["file:\"^~(Documentation/.*)\""],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config file:\"^~(Documentation/.*)\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config file:\"^~(Documentation/.*)\""},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["file:\"^~(Documentation/.*)\""],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "683aa55221ee66bd2f60b74465755cbfea1c0c70",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}