{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b5b5c92c_f8e06227",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T21:57:26Z",
      "side": 1,
      "message": "What if the fire at L541 fails? We would have taken the event out of the queue but failed to process it.",
      "range": {
        "startLine": 537,
        "startChar": 44,
        "endLine": 537,
        "endChar": 51
      },
      "revId": "46943aa7e61a80ee21000ce859815fce26faccf8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b1b5ac2_ace38066",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-10-31T12:24:34Z",
      "side": 1,
      "message": "That is correct, as was discussed [in this comment](https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/391054/comment/72bf8021_aeb386c7/).\n\nWe could use `peek` and remove the event from the internal queue only when processed successfully. \nBut we would need to add a retry mechanism with a maximum number of attempts if the operation fails. This would avoid exactly the situation that the event is never removed from the queue as it was happening. \n\nWould it be best to do so on a different change?",
      "parentUuid": "b5b5c92c_f8e06227",
      "range": {
        "startLine": 537,
        "startChar": 44,
        "endLine": 537,
        "endChar": 51
      },
      "revId": "46943aa7e61a80ee21000ce859815fce26faccf8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47848b76_abd6d02d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-11-02T18:40:15Z",
      "side": 1,
      "message": "Wouldn\u0027t event application failure mean that repo is in an inconsistent state? Also is it possible that any future event for the same repo could succeed?\n\nIsn\u0027t there any strategy already on how to deal with failed events?",
      "parentUuid": "8b1b5ac2_ace38066",
      "range": {
        "startLine": 537,
        "startChar": 44,
        "endLine": 537,
        "endChar": 51
      },
      "revId": "46943aa7e61a80ee21000ce859815fce26faccf8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c28c0f_ce03955f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1161425
      },
      "writtenOn": "2023-11-09T10:15:03Z",
      "side": 1,
      "message": "After the discussion with the team, we agree that it will be addressed as a separate change, described in [this ticket](https://issues.gerritcodereview.com/issues/309816640)",
      "parentUuid": "47848b76_abd6d02d",
      "range": {
        "startLine": 537,
        "startChar": 44,
        "endLine": 537,
        "endChar": 51
      },
      "revId": "46943aa7e61a80ee21000ce859815fce26faccf8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96afe258_e533308d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-11-09T15:40:31Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "64c28c0f_ce03955f",
      "range": {
        "startLine": 537,
        "startChar": 44,
        "endLine": 537,
        "endChar": 51
      },
      "revId": "46943aa7e61a80ee21000ce859815fce26faccf8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "519c1ccc_2bfab395",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-11-11T13:15:40Z",
      "side": 1,
      "message": "Shall we then use `.peek()` here then? What\u0027s the plan to move on?",
      "parentUuid": "96afe258_e533308d",
      "range": {
        "startLine": 537,
        "startChar": 44,
        "endLine": 537,
        "endChar": 51
      },
      "revId": "46943aa7e61a80ee21000ce859815fce26faccf8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daf38139_a222c888",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 537,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-11-13T08:50:13Z",
      "side": 1,
      "message": "Problem with`.peek()` is that if for any reason we cannot process a single message and we are failing constantly on that single one we will block processing of other messages as well. The best solution would be to pick the message try to process and if failed add message to the end of the queue. But again we don\u0027t want to suck forever in the loop, that\u0027s why we need number of retries.\n\nBut to close that change, if you think that `.peek` is better option we can change it and put removing message in the `try-finally` block. But behaviour will be very similar to what we have now",
      "parentUuid": "519c1ccc_2bfab395",
      "range": {
        "startLine": 537,
        "startChar": 44,
        "endLine": 537,
        "endChar": 51
      },
      "revId": "46943aa7e61a80ee21000ce859815fce26faccf8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}