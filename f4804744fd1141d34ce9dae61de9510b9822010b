{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5b4e94ba_eff0cbbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-03-09T13:39:21Z",
      "side": 1,
      "message": "I have been looking the code and it looks that an exception `IllegalStateException` is raised to control the flow. That looks to me an antipattern.\n\nCan we not used another mechanism? Dont we have in java a type that encapsulate that behaviour? i.e Either like in scala?\n\nI just found something like https://github.com/vavr-io/vavr/blob/master/src/main/java/io/vavr/control/Either.java. Maybe we could use something like that, not now but in the future.",
      "revId": "f4804744fd1141d34ce9dae61de9510b9822010b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6e16bad_e101a89d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-03-09T14:21:04Z",
      "side": 1,
      "message": "Good point! Unfortunately we do not use vavr library in Gerrit also this is the standard way of controlling the flow in Java. I know that in Scala checked exceptions is antipattern. Another improvement we could have here is to create dedicated check exception, somethinng like `RefDoesNotExists`so we can be more specific",
      "parentUuid": "5b4e94ba_eff0cbbc",
      "revId": "f4804744fd1141d34ce9dae61de9510b9822010b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dab99b28_dfa48c63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-09T14:54:18Z",
      "side": 1,
      "message": "\u003e I have been looking the code and it looks that an exception IllegalStateException is raised to control the flow. That looks to me an antipattern.\n\nI thought about that as well, however I think in this context we can\u0027t get away from it. As @maczech@gmail.com mentioned we don\u0027t use `vavr`  in Gerrit ðŸ˜ž",
      "parentUuid": "d6e16bad_e101a89d",
      "revId": "f4804744fd1141d34ce9dae61de9510b9822010b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdfe5c0f_84007a72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-03-09T15:48:32Z",
      "side": 1,
      "message": "Question: Are we not allowed to include new and useful libraries in Gerrit?",
      "parentUuid": "dab99b28_dfa48c63",
      "revId": "f4804744fd1141d34ce9dae61de9510b9822010b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}