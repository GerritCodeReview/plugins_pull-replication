{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2a6de69f_369f6846",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-18T16:10:04Z",
      "side": 1,
      "message": "My main concern is the cost of the fallback is too high and a flag in the config would have been a better choice, as it would allow us to make an early decision as to what endpoint to target.\n\nAlso - a separate question for the gurus - this change is not complete as it is missing the client side implementation (which i see is done in a separate change) and it could therefore be a breaking change, if it was merged. Are we aiming for the minimum change which is complete, or we are happy to merge incomplete/half-baked changes (knowing that _eventually_ the feature will be complete)?",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3ec44c2_73abaa2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-18T16:23:51Z",
      "side": 1,
      "message": "\u003e My main concern is the cost of the fallback is too high and a flag in the config would have been a better choice, as it would allow us to make an early decision as to what endpoint to target.\n\nThe purpose of the `fallback` is mainly in cases of `Rolling Upgrade` where we need to ensure that backward compatibility is guaranteed. \nI don\u0027t see the value of a flag in the config. Where is that flag, in the Gerrit instance that behaves as a client or in the Gerrit instance that behaves as a server? \n\n\u003eAlso - a separate question for the gurus - this change is not complete as it is missing the client side implementation (which i see is done in a separate change) and it could therefore be a breaking change, if it was merged. Are we aiming for the minimum change which is complete, or we are happy to merge incomplete/half-baked changes (knowing that eventually the feature will be complete)?\n\nThe idea is to merge all the changes together as they belong to the same topic `init-project-with-project-config`. \n\nHappy to discuss all the points.",
      "parentUuid": "2a6de69f_369f6846",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "295feaf0_6b428bad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-18T16:35:03Z",
      "side": 1,
      "message": "\u003e it could therefore be a breaking change, if it was merged.\n\nTo clarify. This is NOT a breaking change. The fallback will ensure the backward compatibility. But as I said before, the idea is to merge all the changes together.",
      "parentUuid": "b3ec44c2_73abaa2d",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b1ba26f_58d07d29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-19T08:19:25Z",
      "side": 1,
      "message": "\u003e The purpose of the fallback is mainly in cases of Rolling Upgrade where we need to ensure that backward compatibility is guaranteed\n\nAgreed. But could it not be the case that an org is running multiple gerrit nodes on different (yet somewhat compatible) versions _by choice_? We can\u0027t assume how short the rolling upgrade window will be. That window of time could be mins, hours, days, weeks or even months.\n\n\u003e I don\u0027t see the value of a flag in the config. Where is that flag, in the Gerrit instance that behaves as a client or in the Gerrit instance that behaves as a server?\n\nI am suggesting to introduce a flag in the config, similar to what we did in [1].\n\n\u003e To clarify. This is NOT a breaking change\n\nYou\u0027re 100% correct, my bad!\n\n[1] https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/378274",
      "parentUuid": "295feaf0_6b428bad",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b00d6be_10a2dc14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-19T10:26:09Z",
      "side": 1,
      "message": "\u003e But could it not be the case that an org is running multiple gerrit nodes on different (yet somewhat compatible) versions by choice? We can\u0027t assume how short the rolling upgrade window will be. That window of time could be mins, hours, days, weeks or even months.\n\n@luca.milanesio@gmail.com please, can you provide us with some clarity on the debate? @christoforos.miliotis.dev@gmail.com raised fair concerns.",
      "parentUuid": "6b1ba26f_58d07d29",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d980cbc7_0b3f46e1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 520,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-18T16:10:04Z",
      "side": 1,
      "message": "you can remove `ClientProtocolException` from the throws list.",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a149160_ee9fc027",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 520,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-18T16:23:51Z",
      "side": 1,
      "message": "You are right it is not needed but that should be done as a part of another change.",
      "parentUuid": "d980cbc7_0b3f46e1",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92445386_306cf325",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 522,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-18T16:10:04Z",
      "side": 1,
      "message": "I don\u0027t understand this logic well, but if the project config can inherit from the parent config, then perhaps the `maxParentObjectIds` (last arg) should not be zero.",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac14ddb5_9be699f7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 522,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-18T16:23:51Z",
      "side": 1,
      "message": "Definitively I need look at it.",
      "parentUuid": "92445386_306cf325",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20ed4b61_bc59e1e5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-18T16:10:04Z",
      "side": 1,
      "message": "I think the fallback logic belongs in this method/class. It would be great if we had a way to make an early decision on which endpoint to use, because in the scenario where some nodes are running with this code and others dont, we have the following benefits:\n- We don\u0027t do a redundant network call, which is a waste and increases overall latency.\n- `fetchWholeMetaHistory` might be an expensive operation, which we will avoid performing for no reason.",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "798fb9e0_1eb539de",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-18T16:50:27Z",
      "side": 1,
      "message": "Yes, you are right. The fallback logic is here. \n\nAs I said above, the fallback is for `Rolling upgrades` situations where nodes are upgraded one after another. In that short period, backward compatibility needs to be guaranteed.\n\nI didn\u0027t see a situation where you deploy different versions of Gerrit inside your installation; maybe I need to be corrected.",
      "parentUuid": "20ed4b61_bc59e1e5",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d02da3f_69e61b6a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-19T10:26:09Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "798fb9e0_1eb539de",
      "revId": "8cd7d24a0270df9915479e24d97b83b444358deb",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}