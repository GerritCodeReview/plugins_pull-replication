{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc91eedc_da03ad3b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 20,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2023-03-23T08:41:18Z",
      "side": 1,
      "message": "As discussed during code review, this might or might not be the case, depending on the nature of the failure, perhaps this description should be updated accordingly?",
      "range": {
        "startLine": 19,
        "startChar": 16,
        "endLine": 20,
        "endChar": 22
      },
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62c9f533_155d6c5c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 14
      },
      "lineNbr": 98,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-23T08:46:39Z",
      "side": 1,
      "message": "nit: extra line",
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b03d1ab_0adbef77",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 14
      },
      "lineNbr": 416,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-23T08:46:39Z",
      "side": 1,
      "message": "`of` ? As in the ref found in the replication task.",
      "range": {
        "startLine": 416,
        "startChar": 42,
        "endLine": 416,
        "endChar": 44
      },
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "887d23b1_f52754b3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 14
      },
      "lineNbr": 530,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-23T08:46:39Z",
      "side": 1,
      "message": "At this point we know how many refs failed for a task, hence it might be useful logging what is the % of failed refs. Maybe as a follow up we could add a log here, WDYT?",
      "range": {
        "startLine": 528,
        "startChar": 0,
        "endLine": 530,
        "endChar": 5
      },
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14da324e_ec278e5b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/fetch/CGitFetch.java",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2023-03-23T08:43:19Z",
      "side": 1,
      "message": "We have a configuration documentation stating that permanent exceptions are not currently supported by cGit [1].\n\nThis change seems to introduce that, should we update the documentation accordingly?\n\n[1]https://gerrit.googlesource.com/plugins/pull-replication/+/f0b930de264288984015a66deb207fc2a3cdf5ec/src/main/resources/Documentation/config.md",
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ca48f60_7619956c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/fetch/CGitFetch.java",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-23T08:46:39Z",
      "side": 1,
      "message": "Is this part of this change?",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 87,
        "endChar": 66
      },
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c96ad086_3b0bd60a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/fetch/CGitFetch.java",
        "patchSetId": 14
      },
      "lineNbr": 87,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-23T12:15:26Z",
      "side": 1,
      "message": "Added as part of the commit message.",
      "parentUuid": "3ca48f60_7619956c",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 87,
        "endChar": 66
      },
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40a95aab_c0cb01b3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/fetch/JGitFetch.java",
        "patchSetId": 14
      },
      "lineNbr": 58,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-23T08:46:39Z",
      "side": 1,
      "message": "What about having here the defaulting exception logic? Something like:\n\n```\n\nInexistentRefTransportException.getOptionalPermanentFailure(e)\n   .orElse(\n       PermanentTransportException.getOptionalPermanentFailure(e)\n          .orElse(e)\n    );\n\n```\n\nI am suggesting it since when I first looked at the code I thought we were always throwing a `PermanentTransportException`, which is not the case.\n\nI had to look at the `PermanentTransportException#wrapTransportException` to figure it out.",
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa3e1c0_b6f63945",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/fetch/JGitFetch.java",
        "patchSetId": 14
      },
      "lineNbr": 58,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-23T12:15:26Z",
      "side": 1,
      "message": "Well, the wrapping is responsible for doing the __right thing__. Should then just the method name be changed to `wrapIfPermanentTransportException` ?",
      "parentUuid": "40a95aab_c0cb01b3",
      "revId": "f0b930de264288984015a66deb207fc2a3cdf5ec",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}