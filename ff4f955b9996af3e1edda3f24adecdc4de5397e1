{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c8c04e9d_fb5c285e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "Wrap long lines",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60a72f86_e582db1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 10,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "Can you elaborate on this? What extra properties are you referring to, and are those properties available only via API creation?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e0dd24c_eae117e3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "extra",
      "range": {
        "startLine": 12,
        "startChar": 4,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "386e2458_7e4241d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "I must admit I don\u0027t understand the context well enough, so I don\u0027t know exactly what problem we are looking to solve, perhaps a more detailed explanation could help, or its one of those that we could do a talk about.\n\nThe code itself looks fine, but I am concerned about the response code when failing to create the project, and backwards compatibility with the put method.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b54095d7_b3a02326",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 9
      },
      "lineNbr": 429,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "Does this become static just for testing?\n\nCan we just make it public for testing so we won\u0027t need to pass the `RevisionReader`?",
      "range": {
        "startLine": 429,
        "startChar": 2,
        "endLine": 429,
        "endChar": 15
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c7643c2_3313867b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 9
      },
      "lineNbr": 429,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-13T20:14:14Z",
      "side": 1,
      "message": "Additionally, shouldn\u0027t the default (aka. package) access be enough for testing? Unit tests should be in the same package anyway",
      "parentUuid": "b54095d7_b3a02326",
      "range": {
        "startLine": 429,
        "startChar": 2,
        "endLine": 429,
        "endChar": 15
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c803b06_1a075df3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 9
      },
      "lineNbr": 430,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "Shall we pass the provider instead? So we consistently use the provider in this class in general?",
      "range": {
        "startLine": 430,
        "startChar": 6,
        "endLine": 430,
        "endChar": 36
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c272d9_5039f41f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "can this be null? I thought the only way to obtain a `RevisionData` is through the `RevisionReader.read` which returns an optional. I could be wrong.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a03cf3a_d325aad0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 9
      },
      "lineNbr": 437,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "with the currect implementation this is how max depth will be calculated:\n`Math.min(128, Integer.MAX_VALUE)` so we will fetch maximum 128 commit of the refs/meta/config history. This 128 is a default value for `maxApiHistoryDepth` param",
      "range": {
        "startLine": 437,
        "startChar": 7,
        "endLine": 437,
        "endChar": 65
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e86c66a_a83aba96",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 9
      },
      "lineNbr": 451,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "This won\u0027t cover the case of a new project with history, right?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14c590ef_9a29ae17",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 73,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "I don\u0027t see where this is needed. Maybe I am just missing it.",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 73,
        "endChar": 8
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e87d7d2_de835e42",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "why this is a HttpServlet if we use only PullReplicationFilter? We will never call it directly",
      "range": {
        "startLine": 55,
        "startChar": 49,
        "endLine": 55,
        "endChar": 60
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ad3848d_38487d90",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "+1\n\nI think we missed to remove it in this change [1].\n\nIt is the only one which hasn\u0027t been removed:\n\n```\n\u003e find .  -type f -name *Action.java -exec grep -E \"extends .*Servlet\"  {}  \\;\npublic class ProjectInitializationAction extends HttpServlet {\n```\n\n[1]: https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/380275",
      "parentUuid": "1e87d7d2_de835e42",
      "range": {
        "startLine": 55,
        "startChar": 49,
        "endLine": 55,
        "endChar": 60
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "396a4db0_efd2278f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-17T10:16:35Z",
      "side": 1,
      "message": "Explained in the change 389554",
      "parentUuid": "4ad3848d_38487d90",
      "range": {
        "startLine": 55,
        "startChar": 49,
        "endLine": 55,
        "endChar": 60
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f5e4230_2b44cabb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 85,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "nit: This comment does a great job explaining the deprecation of the `doPut`, but for those people who have context of the change. The description of the change provides enough documentation in my opinion, but i don\u0027t know if generally looking up the change to get all the relevant info is favoured over say a proper javadoc. I leave it up to you.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1737aaeb_a3193077",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 88,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "but do we need to keep those PUT and POST if requests are handled in the PullReplicationFilter?",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 23
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c7e230_87a7ea6f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 88,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "We can just handle the 2 versions of the calls in `PullReplicationFilter#doFilter`, which is where we have the dispatch logic at the moment.\n\n`doPut` and `doPost` can go or the method name modified to avoid confusion.",
      "parentUuid": "1737aaeb_a3193077",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 23
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6d8e579_dbab7828",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 121,
        "startChar": 17,
        "endLine": 121,
        "endChar": 23
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "914a667a_41742547",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "There are a lot of things going on in this method, a comprehensive javadoc will be useful.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da9cdbb4_8882fff9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "shouldn\u0027t we return (or throw exception) here?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea35978b_58d02ae6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 136,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "nit: `readJson` probably no longer belongs to `PullReplicationFilter`.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc630c55_3e265b44",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 136,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-13T14:33:13Z",
      "side": 1,
      "message": "This is a code smell. `PullReplicationFilter` should do the parsing and call `ProjectInitializationAction.apply` or something similar. As we mentioned in the previous comments `ProjectInitializationAction` is not RESTApi endpoint anymore so we shouldn\u0027t have `doGet` and doPost methods",
      "range": {
        "startLine": 136,
        "startChar": 9,
        "endLine": 136,
        "endChar": 40
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9f0576a_3993e628",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 153,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "there are at least 2 nested `try` blocks, can we simplify the code by removing them and have the outer `try` (L127) handle all the exceptions?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "459fdd9a_168ac8e5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 153,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-13T20:14:14Z",
      "side": 1,
      "message": "Alternatively, nested `try` blocks can be extracted into private helper methods. This code will be easier to follow and more descriptive.",
      "parentUuid": "e9f0576a_3993e628",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35eaa25e_93151f4b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 176,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "Just a reminder, on master branch we should check if we do not have to call `projectCache.evictAndReindex` to not be hit by I3818ff876c",
      "range": {
        "startLine": 176,
        "startChar": 8,
        "endLine": 176,
        "endChar": 67
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "646433a9_c5d34988",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 176,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "Don\u0027t we need a reindex here?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c76dd0_4bf8f21e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 176,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "Do we need to modify the `Context` either here or somewhere else in the method?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c336c51f_963b1a1e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 193,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "`Init`",
      "range": {
        "startLine": 193,
        "startChar": 13,
        "endLine": 193,
        "endChar": 18
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37b81697_5cfe90c5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 207,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "this `return` can go.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe89f220_02044af5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 215,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-08-26T14:54:21Z",
      "side": 1,
      "message": "You could move this catch at L#134 and return.",
      "range": {
        "startLine": 201,
        "startChar": 4,
        "endLine": 215,
        "endChar": 5
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91b91385_a8647dba",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ProjectInitializationAction.java",
        "patchSetId": 9
      },
      "lineNbr": 218,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-13T20:14:14Z",
      "side": 1,
      "message": "nit: personally, I\u0027m not really a found of _magic booleans_ in method signatures, especially in public API, would rather prefer having two methods `initProject()` and `initProjectWithReindex` calling a private `doInitProject` with a boolean flag.\n\nThis will also save you responding to questions about reindex above ;)",
      "range": {
        "startLine": 218,
        "startChar": 49,
        "endLine": 218,
        "endChar": 64
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4678eda_3e03563d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "is this change related?",
      "range": {
        "startLine": 83,
        "startChar": 1,
        "endLine": 83,
        "endChar": 79
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58ddc3c0_c2759120",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-13T20:14:14Z",
      "side": 1,
      "message": "Yes, it\u0027s related, as `gson` is used in (now) static `readJson` method line 280",
      "parentUuid": "c4678eda_3e03563d",
      "range": {
        "startLine": 83,
        "startChar": 1,
        "endLine": 83,
        "endChar": 79
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cfaaa5a_9d419cc9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 197,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "we could do similar to `doApplyObject` and parse json here and pass it to initProject for POST and call existing initProject(projectName) for PUT(backward compatibimity)",
      "range": {
        "startLine": 197,
        "startChar": 32,
        "endLine": 197,
        "endChar": 39
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34602803_046736ec",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 197,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-17T10:16:35Z",
      "side": 1,
      "message": "Explained in the change 389554",
      "parentUuid": "8cfaaa5a_9d419cc9",
      "range": {
        "startLine": 197,
        "startChar": 32,
        "endLine": 197,
        "endChar": 39
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce5c7d18_ecfd27b1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 266,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "if we parse json here this doesn\u0027t have to be static",
      "range": {
        "startLine": 266,
        "startChar": 2,
        "endLine": 266,
        "endChar": 8
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9cb4bf4_c2840cb2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 266,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "It is also used in ProjectInitialisationAction.",
      "parentUuid": "ce5c7d18_ecfd27b1",
      "range": {
        "startLine": 266,
        "startChar": 2,
        "endLine": 266,
        "endChar": 8
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7cb07d7_4e5353b5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 266,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-09-13T20:14:14Z",
      "side": 1,
      "message": "I\u0027d consider creating something like `PayloadParser` class with static methods to parse each type. IMO this would make code easier to follow and save us from always using `TypeLiteral` eg:\n\n```\nclass PayloadParser {\n  static RevisionInput parseRevisionInput(HttpServletRequest httpRequest) {\n    return parse(httpRequest, TypeLiteral.get(RevisionInput.class));\n  }\n  \n  static HeadInput parseHeadInput(HttpServletRequest httpRequest) {\n    return parse(httprequest, TypeLiteral.get(HeadInput.class));\n  }\n\n  private static \u003cT\u003e T parse(HttpServletRequest httpRequest, TypeLiteral\u003cT\u003e typeLiteral) {\n    ...\n  }\n}\n\n```\n\nThis could be done as a follow-up change.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c17cc72_f593ad19",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 266,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-13T14:33:13Z",
      "side": 1,
      "message": "TBH that\u0027s not needed because `ProjectInitialisationAction` shouldn\u0027t parse json",
      "parentUuid": "c7cb07d7_4e5353b5",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3dbb1834_e27cb1cd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 9
      },
      "lineNbr": 266,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-13T14:33:13Z",
      "side": 1,
      "message": "Nope, this a code smell and it doesn\u0027t have to be used in the `ProjectInitialisationAction` because `ProjectInitialisationAction` doesn\u0027t need to parse json anymore. Check comments in `ProjectInitialisationAction`",
      "parentUuid": "e9cb4bf4_c2840cb2",
      "range": {
        "startLine": 266,
        "startChar": 2,
        "endLine": 266,
        "endChar": 8
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94e4f757_b9fc5fc8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 9
      },
      "lineNbr": 134,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "this needs updating, as the method accepts more args now.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7d75467_29c15ca6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-23T17:30:20Z",
      "side": 1,
      "message": "What if the remote is an older pull-replication implementation without the POST for creating a new project?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da75cb28_7c067e54",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "Yup, valid point, this will fail I believe. What we did with the batch ref update piece of work is use a flag in the replication config to indicate if the target supports the new endpoint.",
      "parentUuid": "e7d75467_29c15ca6",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb6accca_34bfa097",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-17T16:26:38Z",
      "side": 1,
      "message": "@christoforos.miliotis.dev@gmail.com, please can you have a look at this change 389774, specially this part of the code [1].\n\n\n[1]https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/389774/1/src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
      "parentUuid": "da75cb28_7c067e54",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d09f8fc8_27f68f6c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/event/StreamEventListener.java",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-25T10:07:13Z",
      "side": 1,
      "message": "we should refresh the cache after fetch to avoid the same issue we have with http call",
      "range": {
        "startLine": 150,
        "startChar": 6,
        "endLine": 151,
        "endChar": 65
      },
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4c953e3_628c6a28",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/PullReplicationIT.java",
        "patchSetId": 9
      },
      "lineNbr": 336,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "do we have access to the project cache? Can we assert the project exists in the cache with the right properties?",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "963ce893_91ec97be",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClientBase.java",
        "patchSetId": 9
      },
      "lineNbr": 403,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-09-07T10:59:50Z",
      "side": 1,
      "message": "we should also assert that the `refs/meta/config` is in the payload.",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55eddc17_8ba861f1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClientBase.java",
        "patchSetId": 9
      },
      "lineNbr": 403,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-17T16:26:38Z",
      "side": 1,
      "message": "@christoforos.miliotis.dev@gmail.com please, can you have a look at this change 389554, specially this part of the code [1].\n\n[1] https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/389774/1/src/test/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClientBase.java",
      "parentUuid": "963ce893_91ec97be",
      "revId": "ff4f955b9996af3e1edda3f24adecdc4de5397e1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}