{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46866b7a_0a927111",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/DeleteRefCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-14T22:21:47Z",
      "side": 1,
      "message": "This guard should be done at the beginning of the method around L78 and should return in a NOOP. I don\u0027t understand the purpose of all this simulated behaviour and triggered actions on fake Git results of an operation that did not even happen.",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 132,
        "endChar": 32
      },
      "revId": "b88c5fa4d7091704cd6a675aaa781d58931782b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72f4f3e4_47458634",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/DeleteRefCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-03-15T09:54:12Z",
      "side": 1,
      "message": "We can do the check around L78. But we do not lock ref so we still can end up in the situation that ref will be deleted between line 78 and 140 so we want to make sure that we will not get NPE",
      "parentUuid": "46866b7a_0a927111",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 132,
        "endChar": 32
      },
      "revId": "b88c5fa4d7091704cd6a675aaa781d58931782b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a801db99_746e59c9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/DeleteRefCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T10:48:28Z",
      "side": 1,
      "message": "@maczech@gmail.com good point. Have a look at the last PS if it makes sense. I went back to your initial approach but added a specific exception for the missing ref.\n\nAlso, I am throwing a `RestApiException` as suggested by Luca.",
      "parentUuid": "72f4f3e4_47458634",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 132,
        "endChar": 32
      },
      "revId": "b88c5fa4d7091704cd6a675aaa781d58931782b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8fb03b7_1739e172",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/DeleteRefCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-03-15T16:53:31Z",
      "side": 1,
      "message": "Check if RestApiException witll not cause rettrigger. I took the same approach but then I ended up with the retry behaviour",
      "parentUuid": "a801db99_746e59c9",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 132,
        "endChar": 32
      },
      "revId": "b88c5fa4d7091704cd6a675aaa781d58931782b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2127842d_7f0f8ce2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/DeleteRefCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T17:04:58Z",
      "side": 1,
      "message": "Let me check. If that\u0027s the case we will have a problem with L#74 as well.",
      "parentUuid": "b8fb03b7_1739e172",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 132,
        "endChar": 32
      },
      "revId": "b88c5fa4d7091704cd6a675aaa781d58931782b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ace0d919_b0561ae1",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/DeleteRefCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-03-15T17:49:35Z",
      "side": 1,
      "message": "Throwing an exception here is correct IMHO: a delete of a ref *may fail* and that\u0027s OK. Imagine if someone is removing the ref in the middle of the execution of L139.\n\nJust propagate any failures.",
      "parentUuid": "2127842d_7f0f8ce2",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 132,
        "endChar": 32
      },
      "revId": "b88c5fa4d7091704cd6a675aaa781d58931782b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "faf02d55_7f436527",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/DeleteRefCommand.java",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2023-03-15T21:04:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ace0d919_b0561ae1",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 132,
        "endChar": 32
      },
      "revId": "b88c5fa4d7091704cd6a675aaa781d58931782b6",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}