{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "af224937_61f8394f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 31,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "This paragraph looks is a bit redundant because the second paragraph:\n```\nA typical case for this is for the multi-site plugin to verify that the refs\nbeing fetched are actually needed and not out-of-sync with the global-refdb\n(details on such implementation can be found at If60f5f5ea).\n```",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6e05f76_16c3fcf4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 450,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-12-13T14:42:55Z",
      "side": 1,
      "message": "to provide backward compatibility could we calculate fetchRefSpecs when fetchRefSpecs is not instantiated. With current implementation it can return null value",
      "range": {
        "startLine": 448,
        "startChar": 0,
        "endLine": 450,
        "endChar": 3
      },
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "213e6fef_5da4ee34",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 491,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "nit: localRefsMap",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7be177ec_c9963c55",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 492,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "nit: remoteRefsMap",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03e0be18_244971fb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 494,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "why do you define `localOnly` and in lines L513 and L515 you use to `local`. I am a bit confused.",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6b78dc7_d8c17810",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 497,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "Can you know work with the idea of combining maps [1]?\n\nReference:\n[1]https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/Map.html#putAll(java.util.Map)",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "777cde4e_9c3395dd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 503,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "nit: to improve readability maybe L510 would go to a private method.",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fb24bf6_978cec87",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 503,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T16:39:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "777cde4e_9c3395dd",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "704002ec_6f780c14",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 507,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T16:39:02Z",
      "side": 1,
      "message": "I think this code has space for refactoring to make the code easier to  understand clearer.\n\nAn example of refactoring could be:\n\n```suggestion\nreturn refToFetchRefSpec(srcRef, configRefSpecs)\n  .flatMap(\n    spec -\u003e {\n      \n      boolean isRefValid \u003d remotes.containsKey(srcRef) \u0026\u0026\n     (!local.containsKey(srcRef) ||\n      !sameRefInLocalAndRemote(local, remotes, srcRef));\n      \n      boolean isLocalOnly \u003d localOnly.contains(srcRef);\n      \n      Optional\u003cString\u003e result \u003d (isRefValid || isLocalOnly)\n                            ? Optional.of(srcRef)\n                            : Optional.empty();\n\n      return result;\n   }).isPresent();\n```\n\nwhere `sameRefInLocalAndRemote` could be:\n```\n  private boolean sameRefInLocalAndRemote(Map\u003cString, Ref\u003e local, Map\u003cString, Ref\u003e remotes, String srcRef) {\n    return local\n        .get(srcRef)\n        .getObjectId()\n        .equals(remotes.get(srcRef).getObjectId());\n  }\n```",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1710ecec_46c89dd7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 520,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "I dont understand this part. if you are candidate to be fetched or candidate to be removed, you are filter? those conditions look opposite to me.... I guess I am missing something.",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "381cd63a_2e8e7bb4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchOne.java",
        "patchSetId": 6
      },
      "lineNbr": 520,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T16:39:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1710ecec_46c89dd7",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64e57590_287f6e2e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchRefsDatabaseImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 1010134
      },
      "writtenOn": "2023-12-12T13:10:42Z",
      "side": 1,
      "message": "why does this need to be split into an interface and implementation?",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2204aba1_210aa985",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/FetchRefsDatabaseImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T11:58:33Z",
      "side": 1,
      "message": "does `fc.getRefsMap()` work like `git ls-remote`?",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b0472c2_2a2e73b6",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/FetchOneTest.java",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T14:40:49Z",
      "side": 1,
      "message": "Looking these tests, you are asserting in the `ReplicationFilter.filter` method. I think that the test name should have this pattern:\n\n`shouldFilterNewRefsWhenFetchingWithoutDelta`\n\nmaybe I am missing something.",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a97c04b_23426a20",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/FetchOneTest.java",
        "patchSetId": 6
      },
      "lineNbr": 346,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T14:40:49Z",
      "side": 1,
      "message": "nit: remoteRefsMap",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd784d07_1016cfe9",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/FetchOneTest.java",
        "patchSetId": 6
      },
      "lineNbr": 359,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T14:40:49Z",
      "side": 1,
      "message": "nit: REMOTE_REF",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b74be42_32e5ba81",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/FetchOneTest.java",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-12-12T14:40:49Z",
      "side": 1,
      "message": "nit: REMOTE_REF",
      "revId": "37a76c0bea09d21a7f4b3aae2a0164f4ce66dfff",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}