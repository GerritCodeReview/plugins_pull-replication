{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3ab41a7c_23081b1b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T14:40:33Z",
      "side": 1,
      "message": "It might be useful to explain when this is the case, i.e.: since the ordering of objects replication is not guaranteed, we could encounter cases where the child object is propagated before the parent.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "952d5483_093c9318",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "Well, it isn\u0027t just the ordering but *any* replication event is not guaranteed.",
      "parentUuid": "3ab41a7c_23081b1b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "036e7e1b_995b44c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "952d5483_093c9318",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 61
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0a15dee_f7633321",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T14:40:33Z",
      "side": 1,
      "message": "Would it be clear if we add something like: \"the negotiation phase during the Git fetch could be avoided altogether. In fact, in this case, the negotiation phase is sub optimal, since all the refs would be transfer with the network overhead of of client and server trying to find out the common ancestor.\" \n\nNot sure if it makes more clear :/",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 35
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce8120e2_3de651e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "Sure, will add more context.",
      "parentUuid": "b0a15dee_f7633321",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 35
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f786eac4_f329cdeb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 15,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:41:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce8120e2_3de651e5",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 35
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74c8f8c4_5a29e1c8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReader.java",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "any reason why 128 ?",
      "range": {
        "startLine": 54,
        "startChar": 59,
        "endLine": 54,
        "endChar": 62
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28d6fc26_c8ed936f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReader.java",
        "patchSetId": 14
      },
      "lineNbr": 54,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T21:35:38Z",
      "side": 1,
      "message": "Nope, just an arbitrary default. Bear in mind that this would cover the case where there are 128 missing replication events for the same \u0027/meta\u0027 ref, which is a very high max limit as a default.",
      "parentUuid": "74c8f8c4_5a29e1c8",
      "range": {
        "startLine": 54,
        "startChar": 59,
        "endLine": 54,
        "endChar": 62
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cfcbffa_26f3675c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "Shall we rename it `applyObjectCommand` for consistency with the `deleteRefCommand`?",
      "range": {
        "startLine": 45,
        "startChar": 25,
        "endLine": 45,
        "endChar": 32
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "954de6de_8b397077",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cfcbffa_26f3675c",
      "range": {
        "startLine": 45,
        "startChar": 25,
        "endLine": 45,
        "endChar": 32
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1389277_f042cad8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "nit: capital N",
      "range": {
        "startLine": 56,
        "startChar": 31,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c541c0e_2abb1343",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 56,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1389277_f042cad8",
      "range": {
        "startLine": 56,
        "startChar": 31,
        "endLine": 56,
        "endChar": 32
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db90f1cf_6efde588",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "These tow `if`s can go outside the try block, right?",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cf945ff_2c325621",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db90f1cf_6efde588",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 66,
        "endChar": 0
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97933fd3_b4bed833",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 81,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "Is the `deleteRef` sync? I think it calls `deleteSingleRef` which is async, but I might be wrong. If it is async I think we should return a 202 here since the action hasn\u0027t happened yet.",
      "range": {
        "startLine": 81,
        "startChar": 39,
        "endLine": 81,
        "endChar": 72
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bff1ef8_00e53698",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 81,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "The delete refs are always sync AFAIK.",
      "parentUuid": "97933fd3_b4bed833",
      "range": {
        "startLine": 81,
        "startChar": 39,
        "endLine": 81,
        "endChar": 72
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe877069_7ca07cc2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 97,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "Why not doing this at the very beginning just after we checked we have permission to call the API?",
      "range": {
        "startLine": 84,
        "startChar": 6,
        "endLine": 97,
        "endChar": 7
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e54b6348_9bf4de48",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/ApplyObjectsAction.java",
        "patchSetId": 14
      },
      "lineNbr": 97,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "The `input.validate()` is a valid method call only if the command isn\u0027t a delete ref, hence it should be done *after* having executed the delete ref logic.",
      "parentUuid": "fe877069_7ca07cc2",
      "range": {
        "startLine": 84,
        "startChar": 6,
        "endLine": 97,
        "endChar": 7
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7323cbaa_5eaf10bf",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "In a follow up change, we could move this check outside the `if..else` chain, so we won\u0027t have to repeat it for all the cases.",
      "range": {
        "startLine": 135,
        "startChar": 8,
        "endLine": 135,
        "endChar": 52
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10dbad0d_548760db",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/PullReplicationFilter.java",
        "patchSetId": 14
      },
      "lineNbr": 135,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T21:37:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7323cbaa_5eaf10bf",
      "range": {
        "startLine": 135,
        "startChar": 8,
        "endLine": 135,
        "endChar": 52
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d262d790_55264746",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/data/RevisionInput.java",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "Might be worth adding unit tests for these 2 methods",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 50,
        "endChar": 23
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdb9e74f_112e07dd",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/data/RevisionInput.java",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T21:37:07Z",
      "side": 1,
      "message": "Sure, but it would be best in a separate change, as there isn\u0027t a RevisionInputTest class yet.",
      "parentUuid": "d262d790_55264746",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 50,
        "endChar": 23
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d302c90a_e3d61bd4",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 14
      },
      "lineNbr": 86,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "Is this needed here? It is already specified at test suite level",
      "range": {
        "startLine": 86,
        "startChar": 3,
        "endLine": 86,
        "endChar": 15
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6408e5d9_92f427db",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 14
      },
      "lineNbr": 86,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T20:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d302c90a_e3d61bd4",
      "range": {
        "startLine": 86,
        "startChar": 3,
        "endLine": 86,
        "endChar": 15
      },
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6696fbb1_3aed1a75",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2022-07-15T11:54:11Z",
      "side": 1,
      "message": "We should probably also tests that if `CONFIG_MAX_API_HISTORY_DEPTH`  \u003c `numberOfParents`, we don\u0027t get back all the parents.",
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96944510_23c80818",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 14
      },
      "lineNbr": 88,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-08-05T21:35:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6696fbb1_3aed1a75",
      "revId": "bb21f1e1a137d3b3a11af84897047f3111a775f0",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}