{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4554cdff_0043d4c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-02T10:40:48Z",
      "side": 1,
      "message": "I think you need to make changes in the `examples-set Dockerfile` for `http` and `broker`.\n\nThe following line needs to be removed:\n```\nCOPY --chown\u003dgerrit:gerrit pull-replication.jar /var/gerrit/lib/pull-replication.jar\n```",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deea2994_a17e1ed0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-02T11:01:50Z",
      "side": 1,
      "message": "Yes, this is not needed anymore.",
      "parentUuid": "4554cdff_0043d4c2",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0de2b49a_501ec960",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-02T11:08:17Z",
      "side": 1,
      "message": "Before we merge it, I would like to test it manually end to end for Basic and Bearer token Authentication.",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02de5f9a_6ca2e1e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-02T11:17:52Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "0de2b49a_501ec960",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52c1810c_465a66ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-02T11:29:20Z",
      "side": 1,
      "message": "Btw, this change also invalidates this one: I915b69210036928b44bbf33351d23b4c9fec9cda",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3fd1aac_43e0a047",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-02T11:32:11Z",
      "side": 1,
      "message": "You are right and I will revert it once this change has been merged into stable.3.4",
      "parentUuid": "52c1810c_465a66ce",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61f69617_5257d0b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-04T18:11:59Z",
      "side": 1,
      "message": "To make sure that we are in the same page I am going to explain how I understand the flow:\n- pull-replication in primary: when primary wants to do a replication via pull replication, the rest client FetchRestApiClient.java will do:\n  - if there is bearer token defined in the secure.config then:\n     - will add the Basic Authentication header: Authorization: Bearer \u003ctoken\u003e\n     - will NOT add the prefix a/ in the request\n   - if there is no bearer token then:\n     - will add the Basic Authentication as usual\n     - will add the prefix a/ in the request\n- pull-replication in the replica: in the case that there is a rest request to fetch from primary then:\n  - the logic will use the remote.NAME.url [1] defined in replication.config to build the uri. So if YOU want to use basic authentication it should add a/ in that url or on the other hand you want to use Bearer token it should NOT have a/\n   - TransportProvider will decide if uses transport with bearer token when there is bearer token defined or native transport in the case that there is NO bearer token defined.\n\nAssumptions:\n- if you are going to use BEARER TOKEN AUTHENTICATION, you should define the bearer token in the secure.config of all the instances of the topology and make sure that the remote.NAME.url does NOT have a/\n- if you are going to use BASIC AUTHENTICATION, you should define the username and password in the secure.config of all the instances of the topology and make sure that the remote.NAME.url does have a/\n- There is NO logic to check that the configuration is correct. The person that provision the topology must fulfil the rules for the correct behaviour.\n\n[1] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/stable-3.4/src/main/resources/Documentation/config.md",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c63a838_3610f2aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-04T18:16:41Z",
      "side": 1,
      "message": "Apologies for the format above. I will add it again formatted properly:\n\nTo make sure that we are in the same page I am going to explain how I understand the flow:\n\n- pull-replication in primary: when primary wants to do a replication via pull replication, the rest client FetchRestApiClient.java will do:\n  - if there is bearer token defined in the secure.config then:\n     - will add the Basic Authentication header: Authorization: Bearer \u003ctoken\u003e\n     - will NOT add the prefix a/ in the request\n  - if there is no bearer token then:\n    - will add the Basic Authentication as usual\n    - will add the prefix a/ in the request\n\n- pull-replication in the replica: in the case that there is a rest request to fetch from primary then:\n  - the logic will use the remote.NAME.url [1] defined in replication.config to build the uri. So if YOU want to use basic authentication it should add a/ in that url or on the other hand you want to use Bearer token it should NOT have a/\n  - TransportProvider will decide if uses transport with bearer token when there is bearer token defined or native transport in the case that there is NO bearer token defined.\n\nAssumptions:\n\n- if you are going to use BEARER TOKEN AUTHENTICATION, you should define the bearer token in the secure.config of all the instances of the topology and make sure that the remote.NAME.url does NOT have a/\n- if you are going to use BASIC AUTHENTICATION, you should define the username and password in the secure.config of all the instances of the topology and make sure that the remote.NAME.url does have a/\n- There is NO logic to check that the configuration is correct. The person that provision the topology must fulfil the rules for the correct behaviour.\n[1] https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/stable-3.4/src/main/resources/Documentation/config.md",
      "parentUuid": "61f69617_5257d0b9",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93aff24e_7ef20221",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-04T18:16:41Z",
      "side": 1,
      "message": "Apologies for the format in the previous reply",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35c11013_cd7c4a87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-04T18:20:41Z",
      "side": 1,
      "message": "There is a typo:\n`will add the Basic Authentication header: Authorization: Bearer \u003ctoken\u003e`\nshould be\n`will add the Bearer Token Authentication header: Authorization: Bearer \u003ctoken\u003e`",
      "parentUuid": "3c63a838_3610f2aa",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2c828d4_18e8879c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-05-04T18:37:20Z",
      "side": 1,
      "message": "The first one is not a Basic Authentication header. RFC-6750 calls it an \"Authorization Request Header\" with the \"Bearer\" authentication scheme [1].\n\nRFC-2617 already defined the \"Basic\" [2] and \"Digest\" [3] authentication schemes.\n\n[1] https://datatracker.ietf.org/doc/html/rfc6750#section-2.1\n[2] https://datatracker.ietf.org/doc/html/rfc2617#section-2\n[3] https://datatracker.ietf.org/doc/html/rfc2617#section-3",
      "parentUuid": "35c11013_cd7c4a87",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6658350f_e102d4eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-05-04T18:41:07Z",
      "side": 1,
      "message": "I appreciate your accuracy. Probably I should have been more accurate in my commwnts.",
      "parentUuid": "c2c828d4_18e8879c",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f047c949_228d0bc2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/transport/TransportProvider.java",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-05-02T11:33:44Z",
      "side": 1,
      "message": "I think this isn\u0027t wrong but unnecessary, `Transport#open` ensures to select the appropriate implementation `TransportHttp`. In line 65 you already check if the transport is an instance of `TransportHttp`.\n\nThis method should return `false` if the path contains the path prefix `\"a/\"` which triggers basic authentication in Gerrit.",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 52
      },
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0a7c315_c74a160e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/transport/TransportProvider.java",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-05-02T18:42:19Z",
      "side": 1,
      "message": "\u003e This method should return false if the path contains the path prefix \"a/\" which triggers basic authentication in Gerrit.\n\nIs this really needed? If Bearer Token Authentication  is enabled, then `auth.bearerToken` is set and should be used and this is already checked on line 65 with `bearerToken.isPresent()`.",
      "parentUuid": "f047c949_228d0bc2",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 52
      },
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "049f1e02_002765ef",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/transport/TransportProvider.java",
        "patchSetId": 8
      },
      "lineNbr": 76,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-05-03T00:13:47Z",
      "side": 1,
      "message": "I suspect Gerrit will not accept a bearer token if the request uses the `a/` prefix since Gerrit assumes basic authentication under this prefix.\n\nThis kind of pre-emptive bearer token authentication only works if the remote server immediately accepts the bearer token. \n\nRFC-2617 [1] and RFC-6750 [1] define how authentication methods can be dynamically negotiated between client and server. The client starts with an unauthenticated request, the server responds with one or multiple `WWW-Authenticate` headers. Then the client can choose one of the authentication methods accepted by the server. In case of bearer token authentication the server sends `WWW-Authenticate: Bearer` and the client sends the next request with a `Authorization: Bearer \u003ctoken\u003e` header to actually authenticate.\n\n[1] https://datatracker.ietf.org/doc/html/rfc2617#section-1.2\n[2] https://datatracker.ietf.org/doc/html/rfc6750",
      "parentUuid": "f0a7c315_c74a160e",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 52
      },
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b06aa558_57cb22dc",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/transport/TransportProviderTest.java",
        "patchSetId": 8
      },
      "lineNbr": 78,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-05-02T11:33:44Z",
      "side": 1,
      "message": "pushed fix for review https://git.eclipse.org/r/c/jgit/jgit/+/201656",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85213bd8_9047060f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/transport/TransportProviderTest.java",
        "patchSetId": 8
      },
      "lineNbr": 78,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2023-05-02T18:42:19Z",
      "side": 1,
      "message": "Thanks! Should we wait until this change merged and JGit on Gerrit@Head updated the JGit submodule to the version that includes this commit?",
      "parentUuid": "b06aa558_57cb22dc",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9429fa39_598b99f1",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/transport/TransportProviderTest.java",
        "patchSetId": 8
      },
      "lineNbr": 78,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-05-03T00:13:47Z",
      "side": 1,
      "message": "I think we can fix the TODO in a follow-up change",
      "parentUuid": "85213bd8_9047060f",
      "revId": "6c68243f4f027d1569bdc887b3496d2f5ebe8977",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}