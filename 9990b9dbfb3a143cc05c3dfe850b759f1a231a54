{
  "comments": [
    {
      "key": {
        "uuid": "4b5937f8_edcd458b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-07-11T13:37:13Z",
      "side": 1,
      "message": "I\u0027m manage to reproduce that issue during the tests but similar to other race condition issues it is difficult to reproduce it in constant manner. I\u0027ve noticed that during tests I\u0027m getting some timeouts from http calls but refs are fetched correctly. The issue is that \u0027ReplicationState.markAllFetchTasksScheduled\u0027 *must* be called before task is finished if not \u0027ReplicationState.notifyRefReplicated\u0027 is not gonna decrement allFetchTasksFinished and ReplicationState.waitForReplication(long timeout) will wait till timeout. That\u0027s why I see timeouts in tests",
      "revId": "9990b9dbfb3a143cc05c3dfe850b759f1a231a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e569148_9e8d499a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-07-07T00:10:43Z",
      "side": 1,
      "message": "What if the schedule fails? Would the state be stuck in the scheduled state anyway?",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 46
      },
      "revId": "9990b9dbfb3a143cc05c3dfe850b759f1a231a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "812670a3_8419bfb0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-07-10T09:57:40Z",
      "side": 1,
      "message": "Ok this change is to invasive and I never reproduce that. It\u0027s theoretical. I found it when I was was looking for issue fixed in previous change. Plus we have the same code in replication. I will abandon this one",
      "parentUuid": "0e569148_9e8d499a",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 46
      },
      "revId": "9990b9dbfb3a143cc05c3dfe850b759f1a231a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5ed6098_750e805b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommand.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-07-11T13:50:26Z",
      "side": 1,
      "message": "I\u0027ve checked the implementation. In pull replication by design we are not using task storage so ReplicationState.markAllFetchTasksScheduled is basically just changing one variable. I was thinking about removing that method at all because it looks like we do not need it  for FetchOne but unfortunately it\u0027s required for FetchAll",
      "parentUuid": "812670a3_8419bfb0",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 46
      },
      "revId": "9990b9dbfb3a143cc05c3dfe850b759f1a231a54",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}