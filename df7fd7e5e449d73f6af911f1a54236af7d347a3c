{
  "comments": [
    {
      "key": {
        "uuid": "e7469d39_0e2bee86",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-01-17T14:57:23Z",
      "side": 1,
      "message": "Why is this needed? If we want to schedule an async action we can directly call `scheduleAsync`. The polymorphic nature of schedule is hiding the synchronicity/asynchronicity of the operation.",
      "range": {
        "startLine": 331,
        "startChar": 4,
        "endLine": 331,
        "endChar": 49
      },
      "revId": "df7fd7e5e449d73f6af911f1a54236af7d347a3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5739ebd5_25e47851",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-01-17T20:48:21Z",
      "side": 1,
      "message": "This is for backward compatibility. But you are right I can refactor that part",
      "parentUuid": "e7469d39_0e2bee86",
      "range": {
        "startLine": 331,
        "startChar": 4,
        "endLine": 331,
        "endChar": 49
      },
      "revId": "df7fd7e5e449d73f6af911f1a54236af7d347a3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07bec95d_01013a55",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchService.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-01-15T15:05:03Z",
      "side": 1,
      "message": "I\u0027m not sure how to organise configuration for pull replication, current code is heavily based on Source which more or less is representing section of [remote ...] configuration, for example:\n[remote \"Replication\"]\n    url \u003d file:///tmp/gerrit_setup/instance-2/git/${name}.git\n    fetch \u003d +refs/*:refs/*\n    mirror \u003d true\n    timeout \u003d 600\n    rescheduleDelay \u003d 15\n    replicationDelay \u003d 5\n    createMissingRepositories \u003d true\n    replicateProjectDeletions \u003d true\n    replicateHiddenProjects \u003d true\n\nTo figure out which source configuration I should use I\u0027m filtering by url and finding a match. I was also thinking about using label instead of url but url should be unique across configurations and labels can be different on different nodes.\n\nIssue with that approach is that every time we are adding new node we have to update configuration on all existing nodes. \n\nWe can also think about having one common configuration for all sources but this requires significant refactoring for example org.eclipse.jgit.transport.Transport accepts org.eclipse.jgit.transport.RemoteConfig and to create it we have to pass Config object with subsection of following format: [remote \"name\"] we could create something like:\n [remote \"fetch\"]\n    fetch \u003d +refs/*:refs/*\n    mirror \u003d true\n    timeout \u003d 600\n    rescheduleDelay \u003d 15\n    replicationDelay \u003d 5\n    createMissingRepositories \u003d true\n    replicateProjectDeletions \u003d true\n    replicateHiddenProjects \u003d true\nIssue with default configuration is that we cannot control settings per source, for example we cannot have different timeout per source.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 95
      },
      "revId": "df7fd7e5e449d73f6af911f1a54236af7d347a3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e7ffe68_c4e9ac69",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchService.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-01-17T10:35:09Z",
      "side": 1,
      "message": "I believe you did a good thing in looking up by url, it is the only \"unique identifier\" we have at the moment.\n\nRegarding the discoverability of new nodes, since it is a problem we already have and, I recogn, is part of a bigger discussion, we could assume the addition of a node will imply an update and restart of all the nodes.\n\nI agree with you about the common configuration section, I don\u0027t thin it is a good idea.",
      "parentUuid": "07bec95d_01013a55",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 95
      },
      "revId": "df7fd7e5e449d73f6af911f1a54236af7d347a3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3c5e584_94e969ff",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchService.java",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-01-25T12:06:11Z",
      "side": 1,
      "message": "I wouldnâ€™t worry about the dynamic discoverability because that is a no goal for now",
      "parentUuid": "3e7ffe68_c4e9ac69",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 95
      },
      "revId": "df7fd7e5e449d73f6af911f1a54236af7d347a3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5ec69cb_893f94ec",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchService.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-01-17T14:57:23Z",
      "side": 1,
      "message": "Shouldn\u0027t we stop here if we don\u0027t find the source?",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 54,
        "endChar": 5
      },
      "revId": "df7fd7e5e449d73f6af911f1a54236af7d347a3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbc591f6_c2c807c0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchService.java",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-01-17T20:48:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5ec69cb_893f94ec",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 54,
        "endChar": 5
      },
      "revId": "df7fd7e5e449d73f6af911f1a54236af7d347a3c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}