{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "06da34fe_0e44e169",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "interrupts",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 9
      },
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "671543bb_5f11bc88",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "Are you sure? I believe it stops the executor but that doesn\u0027t block the running fetches.",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 18
      },
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd2fbb8c_1a31eb9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "pending, scheduled or retrying ones.",
      "range": {
        "startLine": 11,
        "startChar": 13,
        "endLine": 11,
        "endChar": 25
      },
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb75c05d_ae83b897",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "is",
      "range": {
        "startLine": 16,
        "startChar": 27,
        "endLine": 16,
        "endChar": 38
      },
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba024e6f_a98c990f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "I need to test this E2E, I do not understand how it can manage the interruption of the incoming replication tasks.\n\nI believe we need a \"shutdown\" state of the plugin where the incoming events are rejected and are not triggering new replication tasks.",
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc6cc7b8_ef80137c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 4
      },
      "lineNbr": 266,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "To be read from replication.config",
      "range": {
        "startLine": 266,
        "startChar": 54,
        "endLine": 266,
        "endChar": 57
      },
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68afae82_93d19675",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 4
      },
      "lineNbr": 272,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "Is that a possibility? If we drained successfully all events, how come that the pool cannot be shutdown?",
      "range": {
        "startLine": 269,
        "startChar": 8,
        "endLine": 272,
        "endChar": 9
      },
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80dd09d8_40cacce2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 4
      },
      "lineNbr": 310,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-30T21:31:40Z",
      "side": 1,
      "message": "nit: avoid magic numbers in the code. Define as a constant?",
      "range": {
        "startLine": 310,
        "startChar": 25,
        "endLine": 310,
        "endChar": 27
      },
      "revId": "1430c3769f624150041688f961ee3bdd301bc031",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}