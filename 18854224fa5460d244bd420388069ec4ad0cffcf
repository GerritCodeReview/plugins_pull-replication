{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bfcf72e9_62c30538",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-05-16T12:30:03Z",
      "side": 1,
      "message": "Will this then still work in a multi-primary setup? There a primary needs to have the URL from another primary to fetch from.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 29
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58c0bd2e_e313a803",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-16T14:07:29Z",
      "side": 1,
      "message": "Yes, it will work because in that case @GerritIsReplica boolean is false and the behaviour is then like it was before this change.",
      "parentUuid": "bfcf72e9_62c30538",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 29
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93674c2d_c7267dd3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-16T14:11:58Z",
      "side": 1,
      "message": "Sorry, my previous reply is wrong.\n\nSo the properly configured masters (url present in the remote) will work. If the url is missing then that remote section will still be loaded and this master will be able to notify the other master (if the apiUrl is present) but will not be able to fetch (because of the missing url). I believe this is still a correct behaviour: url is missing, no fetch from that remote.",
      "parentUuid": "58c0bd2e_e313a803",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 29
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3c91832_e78d0afd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2023-05-17T06:55:43Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "93674c2d_c7267dd3",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 12,
        "endChar": 29
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79322761_84e15cae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-05-16T22:42:41Z",
      "side": 1,
      "message": "+1 and we should document the condition.",
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12dc5b96_3184205b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-05-18T20:17:13Z",
      "side": 1,
      "message": "Just a documentation nit, then feel free to merge it üëç\nThanks for the fix, I thought exactly the same *many* times (__why do we need the fetch on the primary side?__)",
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b19ad9f_75c77df7",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/SourceConfigParser.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2023-05-12T07:13:12Z",
      "side": 1,
      "message": "did you mean `!isReplica` ?",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 19
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0daa66d_5fdce7b8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/SourceConfigParser.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-15T08:27:45Z",
      "side": 1,
      "message": "No. The purpose of this check was to exclude remote configs which do not contain remote.\u003cname\u003e.url from the return result of this method. Now, with the isReplica check, this policy is only kept on the replica side. This means that on primary we will honor remote sections which do not contain the remote.\u003cname\u003e.url key.",
      "parentUuid": "5b19ad9f_75c77df7",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 19
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a37d6c4d_39268f6c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/SourceConfigParser.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-15T08:27:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0daa66d_5fdce7b8",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 19
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1770bc9_269e441b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/SourceConfigParser.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-05-16T22:42:41Z",
      "side": 1,
      "message": "+1, if you are on a replica and you don\u0027t have any fetch URI, well you cannot really do anything and therefore you\u0027re not a valid source.\n\nP.S. Should we issue a warning that the entry is ignored because there is no URI?",
      "parentUuid": "a37d6c4d_39268f6c",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 19
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9630f880_5ff42bff",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/SourceConfigParser.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-17T12:00:01Z",
      "side": 1,
      "message": "The behaviour on the replica side remains the same as before this change. What this change fixes is the primary side which, before this change, skipped all remote sections where url was missing. So the replication to those replicas was skipped in that case even if apiUrl was defined.",
      "parentUuid": "b1770bc9_269e441b",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 19
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1e2ee9b_90bd85bb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/SourceConfigParser.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-05-18T20:17:13Z",
      "side": 1,
      "message": "üëç can you also amend the documentation with this behaviour?",
      "parentUuid": "9630f880_5ff42bff",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 19
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50959015_80b56c1a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/SourceConfigParser.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2023-05-19T09:45:39Z",
      "side": 1,
      "message": "I prepared a follow-up change with the intention of clarifying how to configure the pull-replication on both sides (primary and replica side):\nhttps://gerrit-review.googlesource.com/c/plugins/pull-replication/+/374441?forceReload\u003dtrue\n\nThis is something I anyway planned to do and I believe that together with that change we can submit this one.",
      "parentUuid": "f1e2ee9b_90bd85bb",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 19
      },
      "revId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18854224fa5460d244bd420388069ec4ad0cffcf",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}