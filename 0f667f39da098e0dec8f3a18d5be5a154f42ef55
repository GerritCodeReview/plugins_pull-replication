{
  "comments": [
    {
      "key": {
        "uuid": "4311beec_15cbc0a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T08:49:45Z",
      "side": 1,
      "message": "Parallelise",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e08fda13_5deb0f20",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-03T20:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4311beec_15cbc0a3",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 18
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29b685f6_3f2d4001",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T08:49:45Z",
      "side": 1,
      "message": "Can you please elaborate more on what was the bottleneck?\n\nLooking at the code, here you are parallelising the replication from multiple hosts rather than making them asynchronous.",
      "range": {
        "startLine": 9,
        "startChar": 51,
        "endLine": 10,
        "endChar": 19
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc0d097e_ec2c9534",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-03T20:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29b685f6_3f2d4001",
      "range": {
        "startLine": 9,
        "startChar": 51,
        "endLine": 10,
        "endChar": 19
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37018d06_a7b8f199",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T08:49:45Z",
      "side": 1,
      "message": "Do we really need to create a replication queue and a thread pool?",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2c34c98_56aff824",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-02T09:19:02Z",
      "side": 1,
      "message": "ReplicationQueue is here to stop/start sources on receiver site plus to implement GitReferenceUpdatedListener on the sender site. We can separate those two but I think it should be done in separate change. Do you want to use default queue work queue instead of dedicated thread  pool? I though that we want to have control over how many threads we are occupying and have better logging in java melody",
      "parentUuid": "37018d06_a7b8f199",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bfe5543_1c37a399",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T10:04:10Z",
      "side": 1,
      "message": "See below, I am proposing to use a much simpler structure, with parallel streams and a ForkJoinPool.",
      "parentUuid": "b2c34c98_56aff824",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb66ea17_dedf3561",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-03T20:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bfe5543_1c37a399",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 94,
        "endChar": 44
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d44a3dbc_1c473ee6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T08:49:45Z",
      "side": 1,
      "message": "I believe we should wait for the tasks to complete, as we should keep existing behaviour.",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 106,
        "endChar": 5
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f89a4fbf_d6601968",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-03T20:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d44a3dbc_1c473ee6",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 106,
        "endChar": 5
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aba4be3f_d02a307a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T08:49:45Z",
      "side": 1,
      "message": "Using a ForkJoinPool and a parallel stream would make the whole code a lot easier.\nJava 8 parallel streams were introduced exactly for this use-case.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 47
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ee32463_8cf140de",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-02T09:19:02Z",
      "side": 1,
      "message": "I agree it would be much easier. I have checked and I could not find any usage of ForkJoinPool in Gerrit code so I wanted to follow the same patter we already have. But if this is fine I will refactor the code to use ForkJoinPool",
      "parentUuid": "aba4be3f_d02a307a",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 47
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e17eeec1_6d7cdb5f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T10:04:10Z",
      "side": 1,
      "message": "\u003e I agree it would be much easier. I have checked and I could not find any usage of ForkJoinPool in Gerrit code so I wanted to follow the same patter we already have.\n\nIf this change was for Gerrit core, I would agree.\nFrom a plugin we have more freedom and we are free to use what we believe makes sense.\n\n\u003e But if this is fine I will refactor the code to use ForkJoinPool\n\n+1",
      "parentUuid": "5ee32463_8cf140de",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 47
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "203be570_c56b31db",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-03T20:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e17eeec1_6d7cdb5f",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 47
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8370f7_8f8f3258",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T08:49:45Z",
      "side": 1,
      "message": "This would wait indefinitely: we should always allow to specify a timeout whenever there is a wait cycle.",
      "range": {
        "startLine": 164,
        "startChar": 13,
        "endLine": 164,
        "endChar": 18
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17863803_f272f6f9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-02T09:19:02Z",
      "side": 1,
      "message": "I was thinking about that but we already have http connection timeout and idle timeout so I thought that adding new timeout to the config will make it very confusing",
      "parentUuid": "aa8370f7_8f8f3258",
      "range": {
        "startLine": 164,
        "startChar": 13,
        "endLine": 164,
        "endChar": 18
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74f1ea3f_4e09370c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T10:04:10Z",
      "side": 1,
      "message": "It could well be just a static constant in the code, but *infinite wait* isn\u0027t good in general.",
      "parentUuid": "17863803_f272f6f9",
      "range": {
        "startLine": 164,
        "startChar": 13,
        "endLine": 164,
        "endChar": 18
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1a2dd02_136b1303",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 164,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-03T20:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74f1ea3f_4e09370c",
      "range": {
        "startLine": 164,
        "startChar": 13,
        "endLine": 164,
        "endChar": 18
      },
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a754579b_935673af",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T08:49:45Z",
      "side": 1,
      "message": "This isn\u0027t needed as a separate class, you could just use a lambda inside a ForkJoinPool inside a parallel stream execution.",
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e08945ac_3b7ea693",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-02T09:19:02Z",
      "side": 1,
      "message": "Yep same as above I was following the pattern for example from multi-site. But I\u0027m happy to use lambda",
      "parentUuid": "a754579b_935673af",
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93c6cb91_bce75c06",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-09-02T10:04:10Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e08945ac_3b7ea693",
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09732fe7_565a18a9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 3
      },
      "lineNbr": 188,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-09-03T20:30:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93c6cb91_bce75c06",
      "revId": "0f667f39da098e0dec8f3a18d5be5a154f42ef55",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}