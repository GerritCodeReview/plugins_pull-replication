{
  "comments": [
    {
      "key": {
        "uuid": "9d952d61_ea356304",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-02-03T12:07:19Z",
      "side": 1,
      "message": "\"for fetching\" or \"to fetch\"",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 26
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f3cd9b_3094d886",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 7,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-02-03T12:25:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d952d61_ea356304",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 26
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afe4b976_9891449b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 13
      },
      "lineNbr": 544,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-02-03T12:07:19Z",
      "side": 1,
      "message": "Shouldn\u0027t this return an Optional as well for consistency?",
      "range": {
        "startLine": 544,
        "startChar": 9,
        "endLine": 544,
        "endChar": 15
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "691a574a_ad9dbd06",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 13
      },
      "lineNbr": 544,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-02-03T12:25:50Z",
      "side": 1,
      "message": "We have Optional because when we are filtering we can expect that we will have no match. But without filtering URI is mandatory",
      "parentUuid": "afe4b976_9891449b",
      "range": {
        "startLine": 544,
        "startChar": 9,
        "endLine": 544,
        "endChar": 15
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "274d0e8d_a3d9cd31",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 13
      },
      "lineNbr": 544,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-02-03T13:50:38Z",
      "side": 1,
      "message": "LGTM",
      "parentUuid": "691a574a_ad9dbd06",
      "range": {
        "startLine": 544,
        "startChar": 9,
        "endLine": 544,
        "endChar": 15
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8482af80_f718d660",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-02-03T12:07:19Z",
      "side": 1,
      "message": "Are we using this method somewhere? I cannot find it ðŸ˜®",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 74
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c8b093e_5c801aa8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-02-03T12:25:50Z",
      "side": 1,
      "message": "Yes we are using it in line 545 ðŸ˜Š But I\u0027m not sure we need it we were using it as well in FetchAll but now it\u0027s only here. WDYT? I think is still useful to keep",
      "parentUuid": "8482af80_f718d660",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 74
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "216a328d_26b76b8d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-02-03T13:25:04Z",
      "side": 1,
      "message": "I would just merge the two methods into a single one: you are not gonna need it ... and if you do in the future, you\u0027ll introduce it in the future.",
      "parentUuid": "3c8b093e_5c801aa8",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 74
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13ba5736_a09ae3b3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/Source.java",
        "patchSetId": 13
      },
      "lineNbr": 554,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-02-03T15:06:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "216a328d_26b76b8d",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 74
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6965b27_b173b84f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommandTest.java",
        "patchSetId": 13
      },
      "lineNbr": 153,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-02-03T12:07:19Z",
      "side": 1,
      "message": "I think you can just check the exception is thrown as you did in the FetchActionTests , i.e.: @Test(expected \u003d TimeooutException.class)\n\nI don\u0027t see added value in checking we are logging something, WDYT?",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 75
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bac13768_59977d9d",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommandTest.java",
        "patchSetId": 13
      },
      "lineNbr": 153,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-02-03T12:25:50Z",
      "side": 1,
      "message": "Hmm it\u0027s quite important to have good logging for replication, most of our issues are solved because we see problems in logs. That\u0027s why checking if we are not just returning error to the client but we are also leaving trace in our logs in my opinion is important",
      "parentUuid": "c6965b27_b173b84f",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 75
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee982f80_6467ba70",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommandTest.java",
        "patchSetId": 13
      },
      "lineNbr": 153,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-02-03T13:25:04Z",
      "side": 1,
      "message": "The assertion on the logs is very generic anyway and the test is not saying \"shouldLogExceptionWhen....\".\n\nI would just leave assertions for the use-case you are testing.",
      "parentUuid": "bac13768_59977d9d",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 75
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9d01d33_d42e0fbf",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommandTest.java",
        "patchSetId": 13
      },
      "lineNbr": 153,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2020-02-03T13:53:26Z",
      "side": 1,
      "message": "But that\u0027s the assertion I\u0027m testing. I want to make sure that for all major exceptions we are *updating the state*. Assertion on logs was precise but there was a comment that it should not be because we want to check fact that we are logging not the exact message. About comment \"shouldLogExceptionWhen....\" I\u0027m naming it \"shouldUpdateStateWhen...\" because I thought that this is how we call it in replication plugin context because PullReplicationStateLogger is not just logging it\u0027s doing more like it\u0027s implementing ReplicationStateListener and calling stateWriteErr:\n`  private void stateWriteErr(String msg, ReplicationState[] states) {\n    for (ReplicationState rs : states) {\n      if (rs !\u003d null) {\n        rs.writeStdErr(msg);\n      }\n    }\n  }`\n\nAnyway if you guys don\u0027t like it I will remove it. @luca @ponch last vote :)",
      "parentUuid": "ee982f80_6467ba70",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 75
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bbe7896_f3780c41",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommandTest.java",
        "patchSetId": 13
      },
      "lineNbr": 153,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2020-02-03T15:46:57Z",
      "side": 1,
      "message": "Why not using assertThrows()?\nLook at we typically assert exceptions in Gerrit tests.",
      "parentUuid": "b9d01d33_d42e0fbf",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 75
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "222b8ae5_75f29184",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/api/FetchCommandTest.java",
        "patchSetId": 13
      },
      "lineNbr": 153,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2020-02-03T16:08:57Z",
      "side": 1,
      "message": "My last 2c to clarify my previous comments :P \n\nI believe that:\n* if you want to test that we are logging stuff, then the test name should reflect it and you can reuse the current test\n* if you want to test the \"state\" has been correctly set, we should find a way to inspect that value somehow, but not using the logs as a \"probe\"\n\nIf you want to test both, there should probably be 2 different tests.\n\nHowever, I don\u0027t think this should stop the change to go out.",
      "parentUuid": "5bbe7896_f3780c41",
      "range": {
        "startLine": 153,
        "startChar": 6,
        "endLine": 153,
        "endChar": 75
      },
      "revId": "c563308bce3788de5e205379f2338c254136c38b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}