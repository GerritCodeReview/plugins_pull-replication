{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3366cd6c_97b7076f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 12
      },
      "lineNbr": 612,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-07-14T16:24:17Z",
      "side": 1,
      "message": "This can be done before the loop.",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d6ca509_1acc6f01",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 12
      },
      "lineNbr": 612,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-07-17T09:16:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3366cd6c_97b7076f",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49623a91_997f05f3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 12
      },
      "lineNbr": 615,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-07-14T16:24:17Z",
      "side": 1,
      "message": "This returns an `AutoCloseable` - I don\u0027t see us closing this resource manually, or using try-with-resources. Is this leaking, or am I missing something?",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89d4aabf_09cf3eab",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 12
      },
      "lineNbr": 615,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-07-17T09:16:28Z",
      "side": 1,
      "message": "see L617 - `timer.stop()`",
      "parentUuid": "49623a91_997f05f3",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b15695fe_45328fe8",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 12
      },
      "lineNbr": 658,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-07-14T16:24:17Z",
      "side": 1,
      "message": "Can we put this in a guard clause? We can return immediately so wouldn\u0027t need to have the previous condition in an `else` block.",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e375c1c_936dc924",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java",
        "patchSetId": 12
      },
      "lineNbr": 658,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-07-17T09:16:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b15695fe_45328fe8",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19751c1d_ec90dd2e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 12
      },
      "lineNbr": 152,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-07-14T16:24:17Z",
      "side": 1,
      "message": "Nit: this line is unnecessary if we use another `StringEntity` constructor whose second argument is a content type: `new StringEntity(\"[\" + msgBody + \"]\", ContentType.APPLICATION_JSON)` - it automatically sets the content type and the charset.",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12ae5ffe_ef527c79",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 12
      },
      "lineNbr": 152,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-07-17T09:16:28Z",
      "side": 1,
      "message": "The charset defaults to `ISO-8859-1` if we use the constructor you are suggesting, but everywhere else we are using `UTF-8` charset.",
      "parentUuid": "19751c1d_ec90dd2e",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e9b919b_ce4cebdb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 12
      },
      "lineNbr": 152,
      "author": {
        "id": 1063024
      },
      "writtenOn": "2023-07-17T16:02:41Z",
      "side": 1,
      "message": "Can you double check? I think it defaults to `ISO-8859-1` if `contentType` is null, otherwise it uses the charset defined in the content-type passed as an argument. In the case of `APPLICATION_JSON` it\u0027s set to `Consts.UTF_8`, which is what we want.",
      "parentUuid": "12ae5ffe_ef527c79",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21d5ef46_948cd13d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchRestApiClient.java",
        "patchSetId": 12
      },
      "lineNbr": 152,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-07-18T09:18:03Z",
      "side": 1,
      "message": "You\u0027re right. However the proposed change will remove the `ContentType` header from the root of the post request, the header is now available via the entity. And the charset value is also hardcoded to the header value. To better illustrate what I am talking about, the `FetchRestApiClientBase.shouldSetContentTypeHeaderInBatchFetch` is failing, and to make it pass, I need this:\n```\nHttpPost httpPost \u003d httpPostCaptor.getValue();\n    assertThat(httpPost.getEntity().getContentType().getValue())\n        .isEqualTo(new BasicHeader(\"Content-Type\", \"application/json; charset\u003dUTF-8\").getValue());\n```\n\nWDYT?",
      "parentUuid": "8e9b919b_ce4cebdb",
      "revId": "551789d016ecadd9691187d367811c30f38b2ce8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}