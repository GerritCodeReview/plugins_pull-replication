{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "38bc8961_50bd3c95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-25T16:05:09Z",
      "side": 1,
      "message": "I have concerns if the type `Optional\u003cReplicationType\u003e` is the right type.",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66bef6b3_0e3c6cf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-26T11:05:01Z",
      "side": 1,
      "message": "LGTM üëç",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a2a99d7_196eb3ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-26T13:04:17Z",
      "side": 1,
      "message": "IMO, the type Optional\u003cReplicationType\u003e is not accurate because between the possible values:\n- None\n- Some(ASYNC)\n- Some(SYNC)\n\n`Some(SYNC)` is not a real case based on the code in `ReplicationQueue` L290 and L464.",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5953949a_8824fe4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T21:46:48Z",
      "side": 1,
      "message": "Marking as resolved, as the conversation in the code about this flag.",
      "parentUuid": "4a2a99d7_196eb3ff",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ede6736_dfe7f9fc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-25T16:05:09Z",
      "side": 1,
      "message": "I think it would be good to have a java doc in this method to provide more context.",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77e6c833_afd0de90",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T21:46:48Z",
      "side": 1,
      "message": "I am a bit skeptical about doc, unless the method or API is public.\nIf you feel you need more documentation to explain what it does, that means:\n- the method name is wrong OR\n- the parameter names are wrong OR\n- the parameter types are wrong\n\n... or all of the above.\n\nWhilst I agree with increase readability of the code, I believe this is beyond the scope of this change. Marking therefore this as resolved for now, but feel free to follow-up if and when needed.",
      "parentUuid": "1ede6736_dfe7f9fc",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10cbf077_06ff1b0a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-25T16:05:09Z",
      "side": 1,
      "message": "IMO, the type `Optional\u003cReplicationType\u003e` is confusing because the possible values are:\n- None\n- Some(ASYNC)\n- Some(SYNC)\n\nBased on the code in ReplicationQueue L290 and L464 the value  Some(SYNC) is not going to be set (maybe I am wrong) ever therefore, I believe that the type `Optional\u003cReplicationType\u003e` is not the right type. For that reason, it would be more idiomatic to have a boolean that represents if you want to override the `fallback` to an `async fetch`.\n\nSomething like:\n```\nboolean callAsync \u003d replicationTypeOverride || !syncRefsFilter.match(refName);\n```",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4afbc8a2_3c64f627",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-26T10:30:58Z",
      "side": 1,
      "message": "Feature flags are not a great idea because they make code difficult to understand. Sometimes refactoring is so complex that there is no other way and that\u0027s fine. But here we could add two more default methods to make everything more clear:\n\n```\ndefault HttpResult callFetchSync(Project.NameKey project, String refName, URIish targetUri)\n      throws ClientProtocolException, IOException {\n    return callFetch(\n        project,\n        refName,\n        targetUri,\n        MILLISECONDS.toNanos(System.currentTimeMillis()),\n       Optional.of(ReplicationType.SYNC));\n  }\n  \n  default HttpResult callFetchAsync(Project.NameKey project, String refName, URIish targetUri)\n      throws ClientProtocolException, IOException {\n    return callFetch(\n        project,\n        refName,\n        targetUri,\n        MILLISECONDS.toNanos(System.currentTimeMillis()),\n       Optional.of(ReplicationType.ASYNC));\n  }\n\n```",
      "parentUuid": "10cbf077_06ff1b0a",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1003986_89eb138e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-26T11:05:01Z",
      "side": 1,
      "message": "I personally like the implementation as-is. I think the optional replication type works quite nicely and doesn\u0027t bloat the api with additional methods (that to me are just more noise). But this is my personal preference and I appreciate you might disagree. \n\n@maczech@gmail.com why would you need a `callFetchSync` method? Nowhere in the code we call the `callFetch` with `ReplicationType.SYNC`.",
      "parentUuid": "4afbc8a2_3c64f627",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f473c8db_ab6d3e28",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-26T11:16:38Z",
      "side": 1,
      "message": "Ok, so then it\u0027s even simpler and callFetchSync is not needed.\nAbout the feature flag params, good explanation here:\nhttps://martinfowler.com/bliki/FlagArgument.html\n\nBasically is way more readable without feature flag, but it\u0027s just a code style so I\u0027m not going to give negative voting because of that",
      "parentUuid": "f1003986_89eb138e",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83bd6adb_4c863e31",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-26T11:58:50Z",
      "side": 1,
      "message": "Please, do not divert the conversation if a `feature flag` is good or bad option. For me the type `Optional\u003cReplicationType\u003e` does not encode what the commit message is saying and `Some(SYNC)` is not a real case so we should try to find another alternative. But this is an opinion.",
      "parentUuid": "f473c8db_ab6d3e28",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d015aa8e_315068ae",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-26T12:02:24Z",
      "side": 1,
      "message": "\u003e why would you need a callFetchSync method? Nowhere in the code we call the callFetch with ReplicationType.SYNC.\n\n@christoforos.miliotis.dev@gmail.com, implicitly with your comment, you are saying that I am right üòä.",
      "parentUuid": "83bd6adb_4c863e31",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42e035a1_8c5db623",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-10-26T12:16:03Z",
      "side": 1,
      "message": "\u003e Please, do not divert the conversation if a feature flag is good or bad option.\n\nOk, so where is the channel where we can discuss the code style? Code review is a good place to discuss those things the only thing we should have in mind is to be reasonable and do not block the approval of the change and this is exactly what I mentioned here:\n\n\u003ebut it\u0027s just a code style so I\u0027m not going to give negative voting because of that",
      "parentUuid": "d015aa8e_315068ae",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7d7206a_12b8c272",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/replication/pull/client/FetchApiClient.java",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-26T13:04:17Z",
      "side": 1,
      "message": "After speaking with @maczech@gmail.com, I realised that it was a misunderstanding:\n- I agree with opinion about feature flags.",
      "parentUuid": "42e035a1_8c5db623",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b253852_4a2aa505",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueueTest.java",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-25T16:05:09Z",
      "side": 1,
      "message": "is it relevant in the test to `throws ClientProtocolException, IOException, LargeObjectException, RefUpdateException` instead of `throws Exception`",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef0878b0_0e708a16",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueueTest.java",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1157810
      },
      "writtenOn": "2023-10-26T11:05:01Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "6b253852_4a2aa505",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "552afc81_bf4253d6",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueueTest.java",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T21:46:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef0878b0_0e708a16",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3fbddee_b727f73b",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueueTest.java",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-10-25T16:05:09Z",
      "side": 1,
      "message": "The same as above.",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f3cff78_fb7fcf97",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueueTest.java",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-10-26T21:46:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3fbddee_b727f73b",
      "revId": "c5e59d0fbfd13ef47e2b37db8b4652a712bb78e2",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}