{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b3f060af_ef22ebe9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1148165
      },
      "writtenOn": "2023-08-01T02:31:41Z",
      "side": 1,
      "message": "Can anyone help me",
      "revId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6817494_43469ae4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1148165
      },
      "writtenOn": "2023-08-01T02:32:07Z",
      "side": 1,
      "message": "Can anyone help to review this change and submit?",
      "parentUuid": "b3f060af_ef22ebe9",
      "revId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c10f13f_582e6667",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 9
      },
      "lineNbr": 96,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-02T04:56:45Z",
      "side": 1,
      "message": "How is this test related to the problem?",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 52
      },
      "revId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63ec350d_8207bbb8",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 9
      },
      "lineNbr": 96,
      "author": {
        "id": 1160733
      },
      "writtenOn": "2023-08-02T08:16:46Z",
      "side": 1,
      "message": "If \"walk.setPostOrderTraversal(true)\" not set, th master will not send  project\u0027s first commit to the slave.\n\nBut the test framework in Pull-Replicaiton will create a default commit when project created. \n\nSo we could force push a commit without parent to imitate it is the first commit in the project and watch whether tree objects will be replicated.",
      "parentUuid": "1c10f13f_582e6667",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 52
      },
      "revId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aec6613e_8546131f",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 9
      },
      "lineNbr": 96,
      "author": {
        "id": 1160733
      },
      "writtenOn": "2023-08-02T08:18:13Z",
      "side": 1,
      "message": "If \"walk.setPostOrderTraversal(true)\" is not set, the master will not send projects\u0027s first commit to the slave.\n\nBut the test framework in Pull-Replicaiton will create a default commit when project is created.\n\nSo we could force push a commit without parent to imitate it is the first commit in the project and watch whether tree objects will be replicated.",
      "parentUuid": "63ec350d_8207bbb8",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 52
      },
      "revId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf44b280_3d669ecd",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 9
      },
      "lineNbr": 96,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-08-07T15:42:58Z",
      "side": 1,
      "message": "Exactly, this test covers steps described in the ticket and will:\n1. Create empty repo without initial commit:\n` createProjectOverAPI(\"emptyProject\", project, *false*, /* submitType\u003d */ null);`\n2. Create an initial change with some files and directories structure\n3. Read the content of that commit.\n\nWithout the code fix test will fail in L128 and in L134 because tree objects will be skipped",
      "parentUuid": "aec6613e_8546131f",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 52
      },
      "revId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6a1f4bc_c8031b13",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/replication/pull/RevisionReaderIT.java",
        "patchSetId": 9
      },
      "lineNbr": 96,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-09T04:50:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "bf44b280_3d669ecd",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 52
      },
      "revId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5c05b3dd04e8876007c7f2727c91c8563aacd683",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}