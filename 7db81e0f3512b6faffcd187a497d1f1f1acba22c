{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a43ba01c_ddd446ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2023-05-25T06:11:10Z",
      "side": 1,
      "message": "Sorry, I\u0027m not familiar with the pull-replication plugin, hence removing myself as reviewer.",
      "revId": "7db81e0f3512b6faffcd187a497d1f1f1acba22c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d77f0b3_951ea641",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2023-05-25T08:54:54Z",
      "side": 1,
      "message": "Hi Dalio, thank you for your contribution to the pull-replication.\nI will try to reproduce the issue and validate your fix. My understanding was that when we create a new project, on replica nodes we create empty repository and then we trigger git fetch operation for all refs[1]. We do that to make sure that all refs from the primary node and synced up on replica node. Could you please check if that fetch is successful and if you still see the issue with the repo clone\n\n1. https://gerrit.googlesource.com/plugins/pull-replication/+/refs/heads/stable-3.7/src/main/java/com/googlesource/gerrit/plugins/replication/pull/ReplicationQueue.java?autodive\u003d0%2F#494",
      "revId": "7db81e0f3512b6faffcd187a497d1f1f1acba22c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a3bde08_450b3ee6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1160733
      },
      "writtenOn": "2023-05-25T09:10:56Z",
      "side": 1,
      "message": "We find this issue when we import a repo from Gerrit(v3.2.3) to v3.7.2. \n\nFirstly, we create an empty repo in our Gerrit(v3.7.2) without [Create initial empty commit], the repo can create and sync successfully as above code works.\n\nThen we \"cd\" in the old Gerrit(v3.2.3) repo directory and use the following commands to push repo to Gerrit(v3.7.2) Master:\ngit push -o notedb\u003dallow ssh://gerrit@10.162.55.1:29418/vela/nuttx/drivers/segger/SystemView +refs/heads/*:refs/heads/*\ngit push -o notedb\u003dallow ssh://gerrit@10.162.55.1:29418/vela/nuttx/drivers/segger/SystemView +refs/changes/*:refs/changes/*\ngit push -o notedb\u003dallow ssh://gerrit@10.162.55.1:29418/vela/nuttx/drivers/segger/SystemView  +refs/tags/*:refs/tags/* \n\nAnd we find that if we don\u0027t create an initial create, we can\u0027t download from the Pull-Replcation Slave, because the Master didn\u0027t send tree objects.",
      "parentUuid": "0d77f0b3_951ea641",
      "revId": "7db81e0f3512b6faffcd187a497d1f1f1acba22c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4d601c9_c4d0e66f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1160733
      },
      "writtenOn": "2023-05-25T09:16:27Z",
      "side": 1,
      "message": "And in xiaomi, many codes are getting from MTK or Qualcomm, and their repo may not have an initial commit(the repo\u0027s first commit contains directory), and we always find \"Missing Tree Object\" when cloning those repo from slave.",
      "parentUuid": "2a3bde08_450b3ee6",
      "revId": "7db81e0f3512b6faffcd187a497d1f1f1acba22c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fcad543_72b846a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-05-25T10:51:32Z",
      "side": 1,
      "message": "Thanks for the fix. Would this also apply then to earlier releases of the pull-replication plugin? (\u003c v3.7)\n\nCan you also add a test case for it?",
      "revId": "7db81e0f3512b6faffcd187a497d1f1f1acba22c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c66d368_05902669",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1160733
      },
      "writtenOn": "2023-05-25T11:46:06Z",
      "side": 1,
      "message": "It\u0027s my pleasure. In our practice, this fix can work fine in stable-3.5/3.6/3.7/3.8, we use pull-replication from stable-3.5 and find this bug in stable-3.7. Now our version is on the master branch(51b2633).\n\nI will try to make a test for it. \n\nWe also find another bug in CGitFetchClient: https://gerrit-review.googlesource.com/c/plugins/pull-replication/+/374954",
      "parentUuid": "7fcad543_72b846a9",
      "revId": "7db81e0f3512b6faffcd187a497d1f1f1acba22c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}